{
  "version": 3,
  "sources": ["../../rest/admin/2024-10/currency.ts", "../../rest/admin/2024-10/metafield.ts", "../../rest/admin/2024-10/customer.ts", "../../rest/admin/2024-10/discount_code.ts", "../../rest/admin/2024-10/abandoned_checkout.ts", "../../rest/admin/2024-10/access_scope.ts", "../../rest/admin/2024-10/apple_pay_certificate.ts", "../../rest/admin/2024-10/application_charge.ts", "../../rest/admin/2024-10/application_credit.ts", "../../rest/admin/2024-10/article.ts", "../../rest/admin/2024-10/asset.ts", "../../rest/admin/2024-10/assigned_fulfillment_order.ts", "../../rest/admin/2024-10/balance.ts", "../../rest/admin/2024-10/blog.ts", "../../rest/admin/2024-10/cancellation_request.ts", "../../rest/admin/2024-10/carrier_service.ts", "../../rest/admin/2024-10/fulfillment.ts", "../../rest/admin/2024-10/transaction.ts", "../../rest/admin/2024-10/refund.ts", "../../rest/admin/2024-10/order.ts", "../../rest/admin/2024-10/gift_card.ts", "../../rest/admin/2024-10/checkout.ts", "../../rest/admin/2024-10/collect.ts", "../../rest/admin/2024-10/image.ts", "../../rest/admin/2024-10/collection.ts", "../../rest/admin/2024-10/collection_listing.ts", "../../rest/admin/2024-10/comment.ts", "../../rest/admin/2024-10/province.ts", "../../rest/admin/2024-10/country.ts", "../../rest/admin/2024-10/custom_collection.ts", "../../rest/admin/2024-10/customer_address.ts", "../../rest/admin/2024-10/deprecated_api_call.ts", "../../rest/admin/2024-10/dispute.ts", "../../rest/admin/2024-10/dispute_evidence.ts", "../../rest/admin/2024-10/dispute_file_upload.ts", "../../rest/admin/2024-10/draft_order.ts", "../../rest/admin/2024-10/event.ts", "../../rest/admin/2024-10/fulfillment_event.ts", "../../rest/admin/2024-10/fulfillment_order.ts", "../../rest/admin/2024-10/fulfillment_request.ts", "../../rest/admin/2024-10/fulfillment_service.ts", "../../rest/admin/2024-10/gift_card_adjustment.ts", "../../rest/admin/2024-10/inventory_item.ts", "../../rest/admin/2024-10/inventory_level.ts", "../../rest/admin/2024-10/location.ts", "../../rest/admin/2024-10/locations_for_move.ts", "../../rest/admin/2024-10/marketing_event.ts", "../../rest/admin/2024-10/mobile_platform_application.ts", "../../rest/admin/2024-10/order_risk.ts", "../../rest/admin/2024-10/page.ts", "../../rest/admin/2024-10/payment.ts", "../../rest/admin/2024-10/payment_gateway.ts", "../../rest/admin/2024-10/payment_transaction.ts", "../../rest/admin/2024-10/payout.ts", "../../rest/admin/2024-10/policy.ts", "../../rest/admin/2024-10/price_rule.ts", "../../rest/admin/2024-10/variant.ts", "../../rest/admin/2024-10/product.ts", "../../rest/admin/2024-10/product_listing.ts", "../../rest/admin/2024-10/product_resource_feedback.ts", "../../rest/admin/2024-10/recurring_application_charge.ts", "../../rest/admin/2024-10/redirect.ts", "../../rest/admin/2024-10/resource_feedback.ts", "../../rest/admin/2024-10/script_tag.ts", "../../rest/admin/2024-10/shipping_zone.ts", "../../rest/admin/2024-10/shop.ts", "../../rest/admin/2024-10/smart_collection.ts", "../../rest/admin/2024-10/storefront_access_token.ts", "../../rest/admin/2024-10/tender_transaction.ts", "../../rest/admin/2024-10/theme.ts", "../../rest/admin/2024-10/usage_charge.ts", "../../rest/admin/2024-10/user.ts", "../../rest/admin/2024-10/webhook.ts", "../../rest/admin/2024-10/index.ts"],
  "sourcesContent": ["/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n}\n\nexport class Currency extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"currencies.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"currency\",\n      \"plural\": \"currencies\"\n    }\n  ];\n\n  public static async all(\n    {\n      session,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Currency>> {\n    const response = await this.baseFind<Currency>({\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public currency: string | null;\n  public rate_updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  article_id?: number | string | null;\n  blog_id?: number | string | null;\n  collection_id?: number | string | null;\n  customer_id?: number | string | null;\n  draft_order_id?: number | string | null;\n  order_id?: number | string | null;\n  page_id?: number | string | null;\n  product_image_id?: number | string | null;\n  product_id?: number | string | null;\n  variant_id?: number | string | null;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n  article_id?: number | string | null;\n  blog_id?: number | string | null;\n  collection_id?: number | string | null;\n  customer_id?: number | string | null;\n  draft_order_id?: number | string | null;\n  order_id?: number | string | null;\n  page_id?: number | string | null;\n  product_image_id?: number | string | null;\n  product_id?: number | string | null;\n  variant_id?: number | string | null;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  article_id?: number | string | null;\n  blog_id?: number | string | null;\n  collection_id?: number | string | null;\n  customer_id?: number | string | null;\n  draft_order_id?: number | string | null;\n  order_id?: number | string | null;\n  page_id?: number | string | null;\n  product_image_id?: number | string | null;\n  product_id?: number | string | null;\n  variant_id?: number | string | null;\n  limit?: unknown;\n  since_id?: unknown;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  namespace?: unknown;\n  key?: unknown;\n  type?: unknown;\n  fields?: unknown;\n  metafield?: {[key: string]: unknown} | null;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  article_id?: number | string | null;\n  blog_id?: number | string | null;\n  collection_id?: number | string | null;\n  customer_id?: number | string | null;\n  draft_order_id?: number | string | null;\n  order_id?: number | string | null;\n  page_id?: number | string | null;\n  product_image_id?: number | string | null;\n  product_id?: number | string | null;\n  variant_id?: number | string | null;\n}\n\nexport class Metafield extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"article_id\", \"id\"], \"path\": \"articles/<article_id>/metafields/<id>.json\"},\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"blog_id\", \"id\"], \"path\": \"blogs/<blog_id>/metafields/<id>.json\"},\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"blog_id\", \"id\"], \"path\": \"blogs/<blog_id>/metafields/<id>.json\"},\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"collection_id\", \"id\"], \"path\": \"collections/<collection_id>/metafields/<id>.json\"},\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"customer_id\", \"id\"], \"path\": \"customers/<customer_id>/metafields/<id>.json\"},\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"draft_order_id\", \"id\"], \"path\": \"draft_orders/<draft_order_id>/metafields/<id>.json\"},\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"metafields/<id>.json\"},\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"order_id\", \"id\"], \"path\": \"orders/<order_id>/metafields/<id>.json\"},\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"page_id\", \"id\"], \"path\": \"pages/<page_id>/metafields/<id>.json\"},\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"product_image_id\", \"id\"], \"path\": \"product_images/<product_image_id>/metafields/<id>.json\"},\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"product_id\", \"id\"], \"path\": \"products/<product_id>/metafields/<id>.json\"},\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"variant_id\", \"id\"], \"path\": \"variants/<variant_id>/metafields/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"article_id\"], \"path\": \"articles/<article_id>/metafields/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"blog_id\"], \"path\": \"blogs/<blog_id>/metafields/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"blog_id\"], \"path\": \"blogs/<blog_id>/metafields/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"collection_id\"], \"path\": \"collections/<collection_id>/metafields/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"customer_id\"], \"path\": \"customers/<customer_id>/metafields/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"draft_order_id\"], \"path\": \"draft_orders/<draft_order_id>/metafields/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"metafields/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"order_id\"], \"path\": \"orders/<order_id>/metafields/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"page_id\"], \"path\": \"pages/<page_id>/metafields/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"product_image_id\"], \"path\": \"product_images/<product_image_id>/metafields/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"product_id\"], \"path\": \"products/<product_id>/metafields/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"variant_id\"], \"path\": \"variants/<variant_id>/metafields/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"article_id\"], \"path\": \"articles/<article_id>/metafields.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"article_id\", \"id\"], \"path\": \"articles/<article_id>/metafields/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"blog_id\"], \"path\": \"blogs/<blog_id>/metafields.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"blog_id\"], \"path\": \"blogs/<blog_id>/metafields.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"blog_id\", \"id\"], \"path\": \"blogs/<blog_id>/metafields/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"blog_id\", \"id\"], \"path\": \"blogs/<blog_id>/metafields/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"collection_id\"], \"path\": \"collections/<collection_id>/metafields.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"collection_id\", \"id\"], \"path\": \"collections/<collection_id>/metafields/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"customer_id\"], \"path\": \"customers/<customer_id>/metafields.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"customer_id\", \"id\"], \"path\": \"customers/<customer_id>/metafields/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"draft_order_id\"], \"path\": \"draft_orders/<draft_order_id>/metafields.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"draft_order_id\", \"id\"], \"path\": \"draft_orders/<draft_order_id>/metafields/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"metafields.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"metafields/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\"], \"path\": \"orders/<order_id>/metafields.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\", \"id\"], \"path\": \"orders/<order_id>/metafields/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"page_id\"], \"path\": \"pages/<page_id>/metafields.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"page_id\", \"id\"], \"path\": \"pages/<page_id>/metafields/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"product_image_id\"], \"path\": \"product_images/<product_image_id>/metafields.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"product_image_id\", \"id\"], \"path\": \"product_images/<product_image_id>/metafields/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"product_id\"], \"path\": \"products/<product_id>/metafields.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"product_id\", \"id\"], \"path\": \"products/<product_id>/metafields/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"variant_id\"], \"path\": \"variants/<variant_id>/metafields.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"variant_id\", \"id\"], \"path\": \"variants/<variant_id>/metafields/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"article_id\"], \"path\": \"articles/<article_id>/metafields.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"blog_id\"], \"path\": \"blogs/<blog_id>/metafields.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"blog_id\"], \"path\": \"blogs/<blog_id>/metafields.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"collection_id\"], \"path\": \"collections/<collection_id>/metafields.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"customer_id\"], \"path\": \"customers/<customer_id>/metafields.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"draft_order_id\"], \"path\": \"draft_orders/<draft_order_id>/metafields.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"metafields.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"order_id\"], \"path\": \"orders/<order_id>/metafields.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"page_id\"], \"path\": \"pages/<page_id>/metafields.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"product_image_id\"], \"path\": \"product_images/<product_image_id>/metafields.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"product_id\"], \"path\": \"products/<product_id>/metafields.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"variant_id\"], \"path\": \"variants/<variant_id>/metafields.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"article_id\", \"id\"], \"path\": \"articles/<article_id>/metafields/<id>.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"blog_id\", \"id\"], \"path\": \"blogs/<blog_id>/metafields/<id>.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"blog_id\", \"id\"], \"path\": \"blogs/<blog_id>/metafields/<id>.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"collection_id\", \"id\"], \"path\": \"collections/<collection_id>/metafields/<id>.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"customer_id\", \"id\"], \"path\": \"customers/<customer_id>/metafields/<id>.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"draft_order_id\", \"id\"], \"path\": \"draft_orders/<draft_order_id>/metafields/<id>.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"metafields/<id>.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"order_id\", \"id\"], \"path\": \"orders/<order_id>/metafields/<id>.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"page_id\", \"id\"], \"path\": \"pages/<page_id>/metafields/<id>.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"product_image_id\", \"id\"], \"path\": \"product_images/<product_image_id>/metafields/<id>.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"product_id\", \"id\"], \"path\": \"products/<product_id>/metafields/<id>.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"variant_id\", \"id\"], \"path\": \"variants/<variant_id>/metafields/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"metafield\",\n      \"plural\": \"metafields\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      article_id = null,\n      blog_id = null,\n      collection_id = null,\n      customer_id = null,\n      draft_order_id = null,\n      order_id = null,\n      page_id = null,\n      product_image_id = null,\n      product_id = null,\n      variant_id = null,\n      fields = null\n    }: FindArgs\n  ): Promise<Metafield | null> {\n    const result = await this.baseFind<Metafield>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id, \"article_id\": article_id, \"blog_id\": blog_id, \"collection_id\": collection_id, \"customer_id\": customer_id, \"draft_order_id\": draft_order_id, \"order_id\": order_id, \"page_id\": page_id, \"product_image_id\": product_image_id, \"product_id\": product_id, \"variant_id\": variant_id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id,\n      article_id = null,\n      blog_id = null,\n      collection_id = null,\n      customer_id = null,\n      draft_order_id = null,\n      order_id = null,\n      page_id = null,\n      product_image_id = null,\n      product_id = null,\n      variant_id = null\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Metafield>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id, \"article_id\": article_id, \"blog_id\": blog_id, \"collection_id\": collection_id, \"customer_id\": customer_id, \"draft_order_id\": draft_order_id, \"order_id\": order_id, \"page_id\": page_id, \"product_image_id\": product_image_id, \"product_id\": product_id, \"variant_id\": variant_id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      article_id = null,\n      blog_id = null,\n      collection_id = null,\n      customer_id = null,\n      draft_order_id = null,\n      order_id = null,\n      page_id = null,\n      product_image_id = null,\n      product_id = null,\n      variant_id = null,\n      limit = null,\n      since_id = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      namespace = null,\n      key = null,\n      type = null,\n      fields = null,\n      metafield = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Metafield>> {\n    const response = await this.baseFind<Metafield>({\n      session: session,\n      urlIds: {\"article_id\": article_id, \"blog_id\": blog_id, \"collection_id\": collection_id, \"customer_id\": customer_id, \"draft_order_id\": draft_order_id, \"order_id\": order_id, \"page_id\": page_id, \"product_image_id\": product_image_id, \"product_id\": product_id, \"variant_id\": variant_id},\n      params: {\"limit\": limit, \"since_id\": since_id, \"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"namespace\": namespace, \"key\": key, \"type\": type, \"fields\": fields, \"metafield\": metafield, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      article_id = null,\n      blog_id = null,\n      collection_id = null,\n      customer_id = null,\n      draft_order_id = null,\n      order_id = null,\n      page_id = null,\n      product_image_id = null,\n      product_id = null,\n      variant_id = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Metafield>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {\"article_id\": article_id, \"blog_id\": blog_id, \"collection_id\": collection_id, \"customer_id\": customer_id, \"draft_order_id\": draft_order_id, \"order_id\": order_id, \"page_id\": page_id, \"product_image_id\": product_image_id, \"product_id\": product_id, \"variant_id\": variant_id},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public key: string | null;\n  public namespace: string | null;\n  public value: string | number | number | boolean | string | null;\n  public article_id: number | null;\n  public blog_id: number | null;\n  public collection_id: number | null;\n  public created_at: string | null;\n  public customer_id: number | null;\n  public description: string | null;\n  public draft_order_id: number | null;\n  public id: number | null;\n  public order_id: number | null;\n  public owner_id: number | null;\n  public owner_resource: string | null;\n  public page_id: number | null;\n  public product_id: number | null;\n  public product_image_id: number | null;\n  public type: string | null;\n  public updated_at: string | null;\n  public variant_id: number | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Metafield} from './metafield';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  ids?: unknown;\n  since_id?: unknown;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  limit?: unknown;\n  fields?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n}\ninterface OrdersArgs {\n  [key: string]: unknown;\n  session: Session;\n  id: number | string;\n  status?: unknown;\n}\ninterface SearchArgs {\n  [key: string]: unknown;\n  session: Session;\n  order?: unknown;\n  query?: unknown;\n  limit?: unknown;\n  fields?: unknown;\n  returnFullResponse?: boolean;\n}\ninterface AccountActivationUrlArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface SendInviteArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class Customer extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {\n    \"metafield\": Metafield\n  };\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"customers/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"customers/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"customers.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"customers/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"orders\", \"ids\": [\"id\"], \"path\": \"customers/<id>/orders.json\"},\n    {\"http_method\": \"get\", \"operation\": \"search\", \"ids\": [], \"path\": \"customers/search.json\"},\n    {\"http_method\": \"post\", \"operation\": \"account_activation_url\", \"ids\": [\"id\"], \"path\": \"customers/<id>/account_activation_url.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"customers.json\"},\n    {\"http_method\": \"post\", \"operation\": \"send_invite\", \"ids\": [\"id\"], \"path\": \"customers/<id>/send_invite.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"customers/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"customer\",\n      \"plural\": \"customers\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<Customer | null> {\n    const result = await this.baseFind<Customer>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Customer>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      ids = null,\n      since_id = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      limit = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Customer>> {\n    const response = await this.baseFind<Customer>({\n      session: session,\n      urlIds: {},\n      params: {\"ids\": ids, \"since_id\": since_id, \"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"limit\": limit, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Customer>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {\"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async orders(\n    {\n      session,\n      id,\n      status = null,\n      ...otherArgs\n    }: OrdersArgs\n  ): Promise<unknown> {\n    const response = await this.request<Customer>({\n      http_method: \"get\",\n      operation: \"orders\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {\"status\": status, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async search(\n    {\n      session,\n      order = null,\n      query = null,\n      limit = null,\n      fields = null,\n      returnFullResponse = false,\n      ...otherArgs\n    }: SearchArgs\n  ): Promise<unknown> {\n    const response = await this.request<Customer>({\n      http_method: \"get\",\n      operation: \"search\",\n      session: session,\n      urlIds: {},\n      params: {\"order\": order, \"query\": query, \"limit\": limit, \"fields\": fields, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return returnFullResponse ? response : response?.body;\n  }\n\n  public async account_activation_url(\n    {\n      body = null,\n      ...otherArgs\n    }: AccountActivationUrlArgs\n  ): Promise<unknown> {\n    const response = await this.request<Customer>({\n      http_method: \"post\",\n      operation: \"account_activation_url\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async send_invite(\n    {\n      body = null,\n      ...otherArgs\n    }: SendInviteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Customer>({\n      http_method: \"post\",\n      operation: \"send_invite\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public accepts_marketing: boolean | null;\n  public accepts_marketing_updated_at: string | null;\n  public addresses: {[key: string]: unknown}[] | null;\n  public created_at: string | null;\n  public currency: string | null;\n  public default_address: {[key: string]: unknown} | null;\n  public email: string | null;\n  public email_marketing_consent: {[key: string]: unknown} | null;\n  public first_name: string | null;\n  public id: number | null;\n  public last_name: string | null;\n  public last_order_id: number | null;\n  public last_order_name: string | null;\n  public marketing_opt_in_level: string | null;\n  public metafield: Metafield | null | {[key: string]: any};\n  public multipass_identifier: string | null;\n  public note: string | null;\n  public orders_count: number | null;\n  public password: string | null;\n  public password_confirmation: string | null;\n  public phone: string | null;\n  public sms_marketing_consent: {[key: string]: unknown} | null;\n  public state: string | null;\n  public tags: string | null;\n  public tax_exempt: boolean | null;\n  public tax_exemptions: string[] | null;\n  public total_spent: string | null;\n  public updated_at: string | null;\n  public verified_email: boolean | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  price_rule_id?: number | string | null;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n  price_rule_id?: number | string | null;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  price_rule_id?: number | string | null;\n  batch_id?: number | string | null;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  times_used?: unknown;\n  times_used_min?: unknown;\n  times_used_max?: unknown;\n}\ninterface GetAllArgs {\n  [key: string]: unknown;\n  session: Session;\n  price_rule_id?: number | string | null;\n  batch_id?: number | string | null;\n}\ninterface LookupArgs {\n  [key: string]: unknown;\n  session: Session;\n  code?: unknown;\n}\ninterface BatchArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class DiscountCode extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"price_rule_id\", \"id\"], \"path\": \"price_rules/<price_rule_id>/discount_codes/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"discount_codes/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"price_rule_id\", \"batch_id\"], \"path\": \"price_rules/<price_rule_id>/batch/<batch_id>/discount_codes.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"price_rule_id\"], \"path\": \"price_rules/<price_rule_id>/discount_codes.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"price_rule_id\", \"id\"], \"path\": \"price_rules/<price_rule_id>/discount_codes/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get_all\", \"ids\": [\"price_rule_id\", \"batch_id\"], \"path\": \"price_rules/<price_rule_id>/batch/<batch_id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"lookup\", \"ids\": [], \"path\": \"discount_codes/lookup.json\"},\n    {\"http_method\": \"post\", \"operation\": \"batch\", \"ids\": [\"price_rule_id\"], \"path\": \"price_rules/<price_rule_id>/batch.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"price_rule_id\"], \"path\": \"price_rules/<price_rule_id>/discount_codes.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"price_rule_id\", \"id\"], \"path\": \"price_rules/<price_rule_id>/discount_codes/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"discount_code\",\n      \"plural\": \"discount_codes\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      price_rule_id = null\n    }: FindArgs\n  ): Promise<DiscountCode | null> {\n    const result = await this.baseFind<DiscountCode>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id, \"price_rule_id\": price_rule_id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id,\n      price_rule_id = null\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<DiscountCode>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id, \"price_rule_id\": price_rule_id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      price_rule_id = null,\n      batch_id = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<DiscountCode>> {\n    const response = await this.baseFind<DiscountCode>({\n      session: session,\n      urlIds: {\"price_rule_id\": price_rule_id, \"batch_id\": batch_id},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      times_used = null,\n      times_used_min = null,\n      times_used_max = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<DiscountCode>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {\"times_used\": times_used, \"times_used_min\": times_used_min, \"times_used_max\": times_used_max, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async get_all(\n    {\n      session,\n      price_rule_id = null,\n      batch_id = null,\n      ...otherArgs\n    }: GetAllArgs\n  ): Promise<unknown> {\n    const response = await this.request<DiscountCode>({\n      http_method: \"get\",\n      operation: \"get_all\",\n      session: session,\n      urlIds: {\"price_rule_id\": price_rule_id, \"batch_id\": batch_id},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async lookup(\n    {\n      session,\n      code = null,\n      ...otherArgs\n    }: LookupArgs\n  ): Promise<unknown> {\n    const response = await this.request<DiscountCode>({\n      http_method: \"get\",\n      operation: \"lookup\",\n      session: session,\n      urlIds: {},\n      params: {\"code\": code, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async batch(\n    {\n      body = null,\n      ...otherArgs\n    }: BatchArgs\n  ): Promise<unknown> {\n    const response = await this.request<DiscountCode>({\n      http_method: \"post\",\n      operation: \"batch\",\n      session: this.session,\n      urlIds: {\"price_rule_id\": this.price_rule_id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public code: string | null;\n  public created_at: string | null;\n  public errors: {[key: string]: unknown} | null;\n  public id: number | null;\n  public price_rule_id: number | null;\n  public updated_at: string | null;\n  public usage_count: number | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Currency} from './currency';\nimport {Customer} from './customer';\nimport {DiscountCode} from './discount_code';\n\ninterface CheckoutsArgs {\n  [key: string]: unknown;\n  session: Session;\n  since_id?: unknown;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  status?: unknown;\n  limit?: unknown;\n}\n\nexport class AbandonedCheckout extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {\n    \"currency\": Currency,\n    \"customer\": Customer\n  };\n  protected static hasMany: {[key: string]: typeof Base} = {\n    \"discount_codes\": DiscountCode\n  };\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"checkouts\", \"ids\": [], \"path\": \"checkouts.json\"},\n    {\"http_method\": \"get\", \"operation\": \"checkouts\", \"ids\": [], \"path\": \"checkouts.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"abandoned_checkout\",\n      \"plural\": \"abandoned_checkouts\"\n    }\n  ];\n\n  public static async checkouts(\n    {\n      session,\n      since_id = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      status = null,\n      limit = null,\n      ...otherArgs\n    }: CheckoutsArgs\n  ): Promise<unknown> {\n    const response = await this.request<AbandonedCheckout>({\n      http_method: \"get\",\n      operation: \"checkouts\",\n      session: session,\n      urlIds: {},\n      params: {\"since_id\": since_id, \"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"status\": status, \"limit\": limit, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public abandoned_checkout_url: string | null;\n  public billing_address: {[key: string]: unknown} | null;\n  public buyer_accepts_marketing: boolean | null;\n  public buyer_accepts_sms_marketing: boolean | null;\n  public cart_token: string | null;\n  public closed_at: string | null;\n  public completed_at: string | null;\n  public created_at: string | null;\n  public currency: Currency | null | {[key: string]: any};\n  public customer: Customer | null | {[key: string]: any};\n  public customer_locale: string | null;\n  public device_id: number | null;\n  public discount_codes: DiscountCode[] | null | {[key: string]: any};\n  public email: string | null;\n  public gateway: string | null;\n  public id: number | null;\n  public landing_site: string | null;\n  public line_items: {[key: string]: unknown} | null;\n  public location_id: number | null;\n  public note: string | null;\n  public phone: string | null;\n  public presentment_currency: string | null;\n  public referring_site: string | null;\n  public shipping_address: {[key: string]: unknown} | null;\n  public shipping_lines: {[key: string]: unknown} | null;\n  public sms_marketing_phone: string | null;\n  public source_name: string | null;\n  public subtotal_price: string | null;\n  public tax_lines: {[key: string]: unknown} | null;\n  public taxes_included: boolean | null;\n  public token: string | null;\n  public total_discounts: string | null;\n  public total_duties: string | null;\n  public total_line_items_price: string | null;\n  public total_price: string | null;\n  public total_tax: string | null;\n  public total_weight: number | null;\n  public updated_at: string | null;\n  public user_id: number | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n}\n\nexport class AccessScope extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static customPrefix: string | null = \"/admin/oauth\";\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"access_scopes.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"access_scope\",\n      \"plural\": \"access_scopes\"\n    }\n  ];\n\n  public static async all(\n    {\n      session,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<AccessScope>> {\n    const response = await this.baseFind<AccessScope>({\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public handle: string | null;\n  public access_scopes: {[key: string]: unknown}[] | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface CsrArgs {\n  [key: string]: unknown;\n  session: Session;\n  id: number | string;\n}\n\nexport class ApplePayCertificate extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"apple_pay_certificates/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"csr\", \"ids\": [\"id\"], \"path\": \"apple_pay_certificates/<id>/csr.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"apple_pay_certificates/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"apple_pay_certificates.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"apple_pay_certificates/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"apple_pay_certificate\",\n      \"plural\": \"apple_pay_certificates\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id\n    }: FindArgs\n  ): Promise<ApplePayCertificate | null> {\n    const result = await this.baseFind<ApplePayCertificate>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<ApplePayCertificate>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async csr(\n    {\n      session,\n      id,\n      ...otherArgs\n    }: CsrArgs\n  ): Promise<unknown> {\n    const response = await this.request<ApplePayCertificate>({\n      http_method: \"get\",\n      operation: \"csr\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public id: number | null;\n  public merchant_id: string | null;\n  public status: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  since_id?: unknown;\n  fields?: unknown;\n}\n\nexport class ApplicationCharge extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"application_charges.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"application_charges/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"application_charges.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"application_charge\",\n      \"plural\": \"application_charges\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<ApplicationCharge | null> {\n    const result = await this.baseFind<ApplicationCharge>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      since_id = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<ApplicationCharge>> {\n    const response = await this.baseFind<ApplicationCharge>({\n      session: session,\n      urlIds: {},\n      params: {\"since_id\": since_id, \"fields\": fields, ...otherArgs},\n    });\n    \n    return response;\n  }\n\n  public confirmation_url: string | null;\n  public created_at: string | null;\n  public currency: string | null;\n  public id: number | null;\n  public name: string | null;\n  public price: string | number | null;\n  public return_url: string | null;\n  public status: string | null;\n  public test: boolean | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Currency} from './currency';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  fields?: unknown;\n}\n\nexport class ApplicationCredit extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {\n    \"currency\": Currency\n  };\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"application_credits.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"application_credits/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"application_credit\",\n      \"plural\": \"application_credits\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<ApplicationCredit | null> {\n    const result = await this.baseFind<ApplicationCredit>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<ApplicationCredit>> {\n    const response = await this.baseFind<ApplicationCredit>({\n      session: session,\n      urlIds: {},\n      params: {\"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public amount: string | null;\n  public currency: Currency | null | {[key: string]: any};\n  public description: string | null;\n  public id: number | null;\n  public test: boolean | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Metafield} from './metafield';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  blog_id?: number | string | null;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n  blog_id?: number | string | null;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  blog_id?: number | string | null;\n  limit?: unknown;\n  since_id?: unknown;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  published_at_min?: unknown;\n  published_at_max?: unknown;\n  published_status?: unknown;\n  handle?: unknown;\n  tag?: unknown;\n  author?: unknown;\n  fields?: unknown;\n}\ninterface AuthorsArgs {\n  [key: string]: unknown;\n  session: Session;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  blog_id?: number | string | null;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  published_at_min?: unknown;\n  published_at_max?: unknown;\n  published_status?: unknown;\n}\ninterface TagsArgs {\n  [key: string]: unknown;\n  session: Session;\n  blog_id?: number | string | null;\n  limit?: unknown;\n  popular?: unknown;\n}\n\nexport class Article extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {\n    \"metafields\": Metafield\n  };\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"blog_id\", \"id\"], \"path\": \"blogs/<blog_id>/articles/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"authors\", \"ids\": [], \"path\": \"articles/authors.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"blog_id\"], \"path\": \"blogs/<blog_id>/articles/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"blog_id\"], \"path\": \"blogs/<blog_id>/articles.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"blog_id\", \"id\"], \"path\": \"blogs/<blog_id>/articles/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"tags\", \"ids\": [], \"path\": \"articles/tags.json\"},\n    {\"http_method\": \"get\", \"operation\": \"tags\", \"ids\": [\"blog_id\"], \"path\": \"blogs/<blog_id>/articles/tags.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"blog_id\"], \"path\": \"blogs/<blog_id>/articles.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"blog_id\", \"id\"], \"path\": \"blogs/<blog_id>/articles/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"article\",\n      \"plural\": \"articles\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      blog_id = null,\n      fields = null\n    }: FindArgs\n  ): Promise<Article | null> {\n    const result = await this.baseFind<Article>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id, \"blog_id\": blog_id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id,\n      blog_id = null\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Article>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id, \"blog_id\": blog_id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      blog_id = null,\n      limit = null,\n      since_id = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      published_at_min = null,\n      published_at_max = null,\n      published_status = null,\n      handle = null,\n      tag = null,\n      author = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Article>> {\n    const response = await this.baseFind<Article>({\n      session: session,\n      urlIds: {\"blog_id\": blog_id},\n      params: {\"limit\": limit, \"since_id\": since_id, \"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"published_at_min\": published_at_min, \"published_at_max\": published_at_max, \"published_status\": published_status, \"handle\": handle, \"tag\": tag, \"author\": author, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async authors(\n    {\n      session,\n      ...otherArgs\n    }: AuthorsArgs\n  ): Promise<unknown> {\n    const response = await this.request<Article>({\n      http_method: \"get\",\n      operation: \"authors\",\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async count(\n    {\n      session,\n      blog_id = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      published_at_min = null,\n      published_at_max = null,\n      published_status = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Article>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {\"blog_id\": blog_id},\n      params: {\"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"published_at_min\": published_at_min, \"published_at_max\": published_at_max, \"published_status\": published_status, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async tags(\n    {\n      session,\n      blog_id = null,\n      limit = null,\n      popular = null,\n      ...otherArgs\n    }: TagsArgs\n  ): Promise<unknown> {\n    const response = await this.request<Article>({\n      http_method: \"get\",\n      operation: \"tags\",\n      session: session,\n      urlIds: {\"blog_id\": blog_id},\n      params: {\"limit\": limit, \"popular\": popular, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public author: string | null;\n  public blog_id: number | null;\n  public body_html: string | null;\n  public created_at: string | null;\n  public handle: string | null;\n  public id: number | null;\n  public image: string | {[key: string]: unknown} | null;\n  public metafields: Metafield[] | null | {[key: string]: any};\n  public published: boolean | null;\n  public published_at: string | null;\n  public summary_html: string | null;\n  public tags: string | null;\n  public template_suffix: string | null;\n  public title: string | null;\n  public updated_at: string | null;\n  public user_id: number | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface DeleteArgs {\n  session: Session;\n  theme_id?: number | string | null;\n  asset?: {[key: string]: unknown} | null;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  theme_id?: number | string | null;\n  fields?: unknown;\n  asset?: {[key: string]: unknown} | null;\n}\n\nexport class Asset extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"theme_id\"], \"path\": \"themes/<theme_id>/assets.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"theme_id\"], \"path\": \"themes/<theme_id>/assets.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"theme_id\"], \"path\": \"themes/<theme_id>/assets.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"theme_id\"], \"path\": \"themes/<theme_id>/assets.json\"}\n  ];\n  protected static primaryKey: string = \"key\";\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"asset\",\n      \"plural\": \"assets\"\n    }\n  ];\n\n  public static async delete(\n    {\n      session,\n      theme_id = null,\n      asset = null\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Asset>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"theme_id\": theme_id},\n      params: {\"asset\": asset},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      theme_id = null,\n      fields = null,\n      asset = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Asset>> {\n    const response = await this.baseFind<Asset>({\n      session: session,\n      urlIds: {\"theme_id\": theme_id},\n      params: {\"fields\": fields, \"asset\": asset, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public attachment: string | null;\n  public checksum: string | null;\n  public content_type: string | null;\n  public created_at: string | null;\n  public key: string | null;\n  public public_url: string | null;\n  public size: number | null;\n  public theme_id: number | null;\n  public updated_at: string | null;\n  public value: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  assignment_status?: unknown;\n  location_ids?: unknown[] | number | string | null;\n}\n\nexport class AssignedFulfillmentOrder extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"assigned_fulfillment_orders.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"fulfillment_order\",\n      \"plural\": \"fulfillment_orders\"\n    }\n  ];\n\n  public static async all(\n    {\n      session,\n      assignment_status = null,\n      location_ids = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<AssignedFulfillmentOrder>> {\n    const response = await this.baseFind<AssignedFulfillmentOrder>({\n      session: session,\n      urlIds: {},\n      params: {\"assignment_status\": assignment_status, \"location_ids\": location_ids, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public assigned_location_id: number | null;\n  public destination: {[key: string]: unknown} | null;\n  public id: number | null;\n  public line_items: {[key: string]: unknown}[] | null;\n  public order_id: number | null;\n  public request_status: string | null;\n  public shop_id: number | null;\n  public status: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n}\n\nexport class Balance extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"shopify_payments/balance.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"balance\",\n      \"plural\": \"balances\"\n    }\n  ];\n\n  public static async all(\n    {\n      session,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Balance>> {\n    const response = await this.baseFind<Balance>({\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public balance: {[key: string]: unknown}[] | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Metafield} from './metafield';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n  since_id?: unknown;\n  handle?: unknown;\n  fields?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n}\n\nexport class Blog extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {\n    \"metafields\": Metafield\n  };\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"blogs/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"blogs/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"blogs.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"blogs/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"blogs.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"blogs/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"blog\",\n      \"plural\": \"blogs\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<Blog | null> {\n    const result = await this.baseFind<Blog>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Blog>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      limit = null,\n      since_id = null,\n      handle = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Blog>> {\n    const response = await this.baseFind<Blog>({\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, \"since_id\": since_id, \"handle\": handle, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Blog>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public admin_graphql_api_id: string | null;\n  public commentable: string | null;\n  public created_at: string | null;\n  public feedburner: string | null;\n  public feedburner_location: string | null;\n  public handle: string | null;\n  public id: number | null;\n  public metafields: Metafield[] | null | {[key: string]: any};\n  public tags: string | null;\n  public template_suffix: string | null;\n  public title: string | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface AcceptArgs {\n  [key: string]: unknown;\n  message?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface RejectArgs {\n  [key: string]: unknown;\n  message?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class CancellationRequest extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"post\", \"operation\": \"accept\", \"ids\": [\"fulfillment_order_id\"], \"path\": \"fulfillment_orders/<fulfillment_order_id>/cancellation_request/accept.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"fulfillment_order_id\"], \"path\": \"fulfillment_orders/<fulfillment_order_id>/cancellation_request.json\"},\n    {\"http_method\": \"post\", \"operation\": \"reject\", \"ids\": [\"fulfillment_order_id\"], \"path\": \"fulfillment_orders/<fulfillment_order_id>/cancellation_request/reject.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"cancellation_request\",\n      \"plural\": \"cancellation_requests\"\n    }\n  ];\n\n  public async accept(\n    {\n      message = null,\n      body = null,\n      ...otherArgs\n    }: AcceptArgs\n  ): Promise<unknown> {\n    const response = await this.request<CancellationRequest>({\n      http_method: \"post\",\n      operation: \"accept\",\n      session: this.session,\n      urlIds: {\"fulfillment_order_id\": this.fulfillment_order_id},\n      params: {\"message\": message, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async reject(\n    {\n      message = null,\n      body = null,\n      ...otherArgs\n    }: RejectArgs\n  ): Promise<unknown> {\n    const response = await this.request<CancellationRequest>({\n      http_method: \"post\",\n      operation: \"reject\",\n      session: this.session,\n      urlIds: {\"fulfillment_order_id\": this.fulfillment_order_id},\n      params: {\"message\": message, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public fulfillment_order_id: number | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n}\n\nexport class CarrierService extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"carrier_services/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"carrier_services.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"carrier_services/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"carrier_services.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"carrier_services/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"carrier_service\",\n      \"plural\": \"carrier_services\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id\n    }: FindArgs\n  ): Promise<CarrierService | null> {\n    const result = await this.baseFind<CarrierService>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<CarrierService>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<CarrierService>> {\n    const response = await this.baseFind<CarrierService>({\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public active: boolean | null;\n  public admin_graphql_api_id: string | null;\n  public callback_url: string | null;\n  public carrier_service_type: string | null;\n  public format: string | null;\n  public id: number | null;\n  public name: string | null;\n  public service_discovery: boolean | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  order_id?: number | string | null;\n  fields?: unknown;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  fulfillment_order_id?: number | string | null;\n  order_id?: number | string | null;\n  created_at_max?: unknown;\n  created_at_min?: unknown;\n  fields?: unknown;\n  limit?: unknown;\n  since_id?: unknown;\n  updated_at_max?: unknown;\n  updated_at_min?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  order_id?: number | string | null;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n}\ninterface CancelArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface UpdateTrackingArgs {\n  [key: string]: unknown;\n  notify_customer?: unknown;\n  tracking_info?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class Fulfillment extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"order_id\"], \"path\": \"orders/<order_id>/fulfillments/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"fulfillment_order_id\"], \"path\": \"fulfillment_orders/<fulfillment_order_id>/fulfillments.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\"], \"path\": \"orders/<order_id>/fulfillments.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\", \"id\"], \"path\": \"orders/<order_id>/fulfillments/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"cancel\", \"ids\": [\"id\"], \"path\": \"fulfillments/<id>/cancel.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"fulfillments.json\"},\n    {\"http_method\": \"post\", \"operation\": \"update_tracking\", \"ids\": [\"id\"], \"path\": \"fulfillments/<id>/update_tracking.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"fulfillment\",\n      \"plural\": \"fulfillments\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      order_id = null,\n      fields = null\n    }: FindArgs\n  ): Promise<Fulfillment | null> {\n    const result = await this.baseFind<Fulfillment>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id, \"order_id\": order_id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      fulfillment_order_id = null,\n      order_id = null,\n      created_at_max = null,\n      created_at_min = null,\n      fields = null,\n      limit = null,\n      since_id = null,\n      updated_at_max = null,\n      updated_at_min = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Fulfillment>> {\n    const response = await this.baseFind<Fulfillment>({\n      session: session,\n      urlIds: {\"fulfillment_order_id\": fulfillment_order_id, \"order_id\": order_id},\n      params: {\"created_at_max\": created_at_max, \"created_at_min\": created_at_min, \"fields\": fields, \"limit\": limit, \"since_id\": since_id, \"updated_at_max\": updated_at_max, \"updated_at_min\": updated_at_min, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      order_id = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Fulfillment>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {\"order_id\": order_id},\n      params: {\"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async cancel(\n    {\n      body = null,\n      ...otherArgs\n    }: CancelArgs\n  ): Promise<unknown> {\n    const response = await this.request<Fulfillment>({\n      http_method: \"post\",\n      operation: \"cancel\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async update_tracking(\n    {\n      notify_customer = null,\n      tracking_info = null,\n      body = null,\n      ...otherArgs\n    }: UpdateTrackingArgs\n  ): Promise<unknown> {\n    const response = await this.request<Fulfillment>({\n      http_method: \"post\",\n      operation: \"update_tracking\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {\"notify_customer\": notify_customer, \"tracking_info\": tracking_info, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public created_at: string | null;\n  public id: number | null;\n  public line_items: {[key: string]: unknown}[] | null;\n  public location_id: number | null;\n  public name: string | null;\n  public notify_customer: boolean | null;\n  public order_id: number | null;\n  public origin_address: {[key: string]: unknown}[] | null;\n  public receipt: {[key: string]: unknown} | null;\n  public service: string | null;\n  public shipment_status: string | null;\n  public status: string | null;\n  public tracking_company: string | null;\n  public tracking_number: string | null;\n  public tracking_numbers: string[] | null;\n  public tracking_url: string | null;\n  public tracking_urls: string[] | null;\n  public updated_at: string | null;\n  public variant_inventory_management: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  order_id?: number | string | null;\n  fields?: unknown;\n  in_shop_currency?: unknown;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  order_id?: number | string | null;\n  since_id?: unknown;\n  fields?: unknown;\n  in_shop_currency?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  order_id?: number | string | null;\n}\n\nexport class Transaction extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"order_id\"], \"path\": \"orders/<order_id>/transactions/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\"], \"path\": \"orders/<order_id>/transactions.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\", \"id\"], \"path\": \"orders/<order_id>/transactions/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"order_id\"], \"path\": \"orders/<order_id>/transactions.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"transaction\",\n      \"plural\": \"transactions\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      order_id = null,\n      fields = null,\n      in_shop_currency = null\n    }: FindArgs\n  ): Promise<Transaction | null> {\n    const result = await this.baseFind<Transaction>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id, \"order_id\": order_id},\n      params: {\"fields\": fields, \"in_shop_currency\": in_shop_currency},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      order_id = null,\n      since_id = null,\n      fields = null,\n      in_shop_currency = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Transaction>> {\n    const response = await this.baseFind<Transaction>({\n      session: session,\n      urlIds: {\"order_id\": order_id},\n      params: {\"since_id\": since_id, \"fields\": fields, \"in_shop_currency\": in_shop_currency, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      order_id = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Transaction>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {\"order_id\": order_id},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public kind: string | null;\n  public amount: string | null;\n  public amount_rounding: string | null;\n  public authorization: string | null;\n  public authorization_expires_at: string | null;\n  public created_at: string | null;\n  public currency: string | null;\n  public currency_exchange_adjustment: {[key: string]: unknown} | null;\n  public device_id: number | null;\n  public error_code: string | null;\n  public extended_authorization_attributes: {[key: string]: unknown} | null;\n  public gateway: string | null;\n  public id: number | null;\n  public location_id: number | null;\n  public message: string | null;\n  public order_id: number | null;\n  public parent_id: number | null;\n  public payment_details: {[key: string]: unknown} | null;\n  public payments_refund_attributes: {[key: string]: unknown} | null;\n  public processed_at: string | null;\n  public receipt: {[key: string]: unknown} | null;\n  public source_name: string | null;\n  public status: string | null;\n  public test: boolean | null;\n  public total_unsettled_set: {[key: string]: unknown} | null;\n  public user_id: number | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Transaction} from './transaction';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  order_id?: number | string | null;\n  fields?: unknown;\n  in_shop_currency?: unknown;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  order_id?: number | string | null;\n  limit?: unknown;\n  fields?: unknown;\n  in_shop_currency?: unknown;\n}\ninterface CalculateArgs {\n  [key: string]: unknown;\n  shipping?: unknown;\n  refund_line_items?: unknown;\n  currency?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class Refund extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {\n    \"transactions\": Transaction\n  };\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\"], \"path\": \"orders/<order_id>/refunds.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\", \"id\"], \"path\": \"orders/<order_id>/refunds/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"calculate\", \"ids\": [\"order_id\"], \"path\": \"orders/<order_id>/refunds/calculate.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"order_id\"], \"path\": \"orders/<order_id>/refunds.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"refund\",\n      \"plural\": \"refunds\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      order_id = null,\n      fields = null,\n      in_shop_currency = null\n    }: FindArgs\n  ): Promise<Refund | null> {\n    const result = await this.baseFind<Refund>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id, \"order_id\": order_id},\n      params: {\"fields\": fields, \"in_shop_currency\": in_shop_currency},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      order_id = null,\n      limit = null,\n      fields = null,\n      in_shop_currency = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Refund>> {\n    const response = await this.baseFind<Refund>({\n      session: session,\n      urlIds: {\"order_id\": order_id},\n      params: {\"limit\": limit, \"fields\": fields, \"in_shop_currency\": in_shop_currency, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public async calculate(\n    {\n      shipping = null,\n      refund_line_items = null,\n      currency = null,\n      body = null,\n      ...otherArgs\n    }: CalculateArgs\n  ): Promise<unknown> {\n    const response = await this.request<Refund>({\n      http_method: \"post\",\n      operation: \"calculate\",\n      session: this.session,\n      urlIds: {\"order_id\": this.order_id},\n      params: {\"shipping\": shipping, \"refund_line_items\": refund_line_items, \"currency\": currency, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public created_at: string | null;\n  public duties: {[key: string]: unknown}[] | null;\n  public id: number | null;\n  public note: string | null;\n  public order_adjustments: {[key: string]: unknown}[] | null;\n  public order_id: number | null;\n  public processed_at: string | null;\n  public refund_duties: {[key: string]: unknown}[] | null;\n  public refund_line_items: {[key: string]: unknown}[] | null;\n  public restock: boolean | null;\n  public transactions: Transaction[] | null | {[key: string]: any};\n  public user_id: number | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Customer} from './customer';\nimport {DiscountCode} from './discount_code';\nimport {Fulfillment} from './fulfillment';\nimport {Refund} from './refund';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  ids?: unknown;\n  limit?: unknown;\n  since_id?: unknown;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  processed_at_min?: unknown;\n  processed_at_max?: unknown;\n  attribution_app_id?: unknown;\n  status?: unknown;\n  financial_status?: unknown;\n  fulfillment_status?: unknown;\n  fields?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  status?: unknown;\n  financial_status?: unknown;\n  fulfillment_status?: unknown;\n}\ninterface CancelArgs {\n  [key: string]: unknown;\n  amount?: unknown;\n  currency?: unknown;\n  restock?: unknown;\n  reason?: unknown;\n  email?: unknown;\n  refund?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface CloseArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface OpenArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class Order extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {\n    \"customer\": Customer\n  };\n  protected static hasMany: {[key: string]: typeof Base} = {\n    \"discount_codes\": DiscountCode,\n    \"fulfillments\": Fulfillment,\n    \"refunds\": Refund\n  };\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"orders/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"orders/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"orders.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"orders/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"cancel\", \"ids\": [\"id\"], \"path\": \"orders/<id>/cancel.json\"},\n    {\"http_method\": \"post\", \"operation\": \"close\", \"ids\": [\"id\"], \"path\": \"orders/<id>/close.json\"},\n    {\"http_method\": \"post\", \"operation\": \"open\", \"ids\": [\"id\"], \"path\": \"orders/<id>/open.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"orders.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"orders/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"order\",\n      \"plural\": \"orders\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<Order | null> {\n    const result = await this.baseFind<Order>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Order>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      ids = null,\n      limit = null,\n      since_id = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      processed_at_min = null,\n      processed_at_max = null,\n      attribution_app_id = null,\n      status = null,\n      financial_status = null,\n      fulfillment_status = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Order>> {\n    const response = await this.baseFind<Order>({\n      session: session,\n      urlIds: {},\n      params: {\"ids\": ids, \"limit\": limit, \"since_id\": since_id, \"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"processed_at_min\": processed_at_min, \"processed_at_max\": processed_at_max, \"attribution_app_id\": attribution_app_id, \"status\": status, \"financial_status\": financial_status, \"fulfillment_status\": fulfillment_status, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      status = null,\n      financial_status = null,\n      fulfillment_status = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Order>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {\"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"status\": status, \"financial_status\": financial_status, \"fulfillment_status\": fulfillment_status, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async cancel(\n    {\n      amount = null,\n      currency = null,\n      restock = null,\n      reason = null,\n      email = null,\n      refund = null,\n      body = null,\n      ...otherArgs\n    }: CancelArgs\n  ): Promise<unknown> {\n    const response = await this.request<Order>({\n      http_method: \"post\",\n      operation: \"cancel\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {\"amount\": amount, \"currency\": currency, \"restock\": restock, \"reason\": reason, \"email\": email, \"refund\": refund, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async close(\n    {\n      body = null,\n      ...otherArgs\n    }: CloseArgs\n  ): Promise<unknown> {\n    const response = await this.request<Order>({\n      http_method: \"post\",\n      operation: \"close\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async open(\n    {\n      body = null,\n      ...otherArgs\n    }: OpenArgs\n  ): Promise<unknown> {\n    const response = await this.request<Order>({\n      http_method: \"post\",\n      operation: \"open\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public line_items: {[key: string]: unknown}[] | null;\n  public app_id: number | null;\n  public billing_address: {[key: string]: unknown} | null;\n  public browser_ip: string | null;\n  public buyer_accepts_marketing: boolean | null;\n  public cancel_reason: string | null;\n  public cancelled_at: string | null;\n  public cart_token: string | null;\n  public checkout_token: string | null;\n  public client_details: {[key: string]: unknown} | null;\n  public closed_at: string | null;\n  public company: {[key: string]: unknown} | null;\n  public confirmation_number: string | null;\n  public created_at: string | null;\n  public currency: string | null;\n  public current_subtotal_price: string | null;\n  public current_subtotal_price_set: {[key: string]: unknown} | null;\n  public current_total_additional_fees_set: {[key: string]: unknown} | null;\n  public current_total_discounts: string | null;\n  public current_total_discounts_set: {[key: string]: unknown} | null;\n  public current_total_duties_set: {[key: string]: unknown} | null;\n  public current_total_price: string | null;\n  public current_total_price_set: {[key: string]: unknown} | null;\n  public current_total_tax: string | null;\n  public current_total_tax_set: {[key: string]: unknown} | null;\n  public customer: Customer | null | {[key: string]: any};\n  public customer_locale: string | null;\n  public discount_applications: {[key: string]: unknown}[] | null;\n  public discount_codes: DiscountCode[] | null | {[key: string]: any};\n  public email: string | null;\n  public estimated_taxes: boolean | null;\n  public financial_status: string | null;\n  public fulfillment_status: string | null;\n  public fulfillments: Fulfillment[] | null | {[key: string]: any};\n  public gateway: string | null;\n  public id: number | null;\n  public landing_site: string | null;\n  public location_id: number | null;\n  public merchant_of_record_app_id: number | null;\n  public merchant_business_entity_id: string | null;\n  public name: string | null;\n  public note: string | null;\n  public note_attributes: {[key: string]: unknown}[] | null;\n  public number: number | null;\n  public order_number: number | null;\n  public order_status_url: string | null;\n  public original_total_additional_fees_set: {[key: string]: unknown} | null;\n  public original_total_duties_set: {[key: string]: unknown} | null;\n  public payment_gateway_names: string[] | null;\n  public payment_terms: {[key: string]: unknown} | null;\n  public phone: string | null;\n  public po_number: string | null;\n  public presentment_currency: string | null;\n  public processed_at: string | null;\n  public referring_site: string | null;\n  public refunds: Refund[] | null | {[key: string]: any};\n  public shipping_address: {[key: string]: unknown} | null;\n  public shipping_lines: {[key: string]: unknown}[] | null;\n  public source_identifier: string | null;\n  public source_name: string | null;\n  public source_url: string | null;\n  public subtotal_price: string | null;\n  public subtotal_price_set: {[key: string]: unknown} | null;\n  public tags: string | null;\n  public tax_lines: {[key: string]: unknown}[] | null;\n  public taxes_included: boolean | null;\n  public test: boolean | null;\n  public token: string | null;\n  public total_discounts: string | null;\n  public total_discounts_set: {[key: string]: unknown} | null;\n  public total_line_items_price: string | null;\n  public total_line_items_price_set: {[key: string]: unknown} | null;\n  public total_outstanding: string | null;\n  public total_price: string | null;\n  public total_price_set: {[key: string]: unknown} | null;\n  public total_shipping_price_set: {[key: string]: unknown} | null;\n  public total_tax: string | number | null;\n  public total_tax_set: {[key: string]: unknown} | null;\n  public total_tip_received: string | null;\n  public total_weight: number | null;\n  public updated_at: string | null;\n  public user_id: number | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  status?: unknown;\n  limit?: unknown;\n  since_id?: unknown;\n  fields?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  status?: unknown;\n}\ninterface SearchArgs {\n  [key: string]: unknown;\n  session: Session;\n  order?: unknown;\n  query?: unknown;\n  limit?: unknown;\n  fields?: unknown;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  returnFullResponse?: boolean;\n}\ninterface DisableArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class GiftCard extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"gift_cards/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"gift_cards.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"gift_cards/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"search\", \"ids\": [], \"path\": \"gift_cards/search.json\"},\n    {\"http_method\": \"post\", \"operation\": \"disable\", \"ids\": [\"id\"], \"path\": \"gift_cards/<id>/disable.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"gift_cards.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"gift_cards/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"gift_card\",\n      \"plural\": \"gift_cards\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id\n    }: FindArgs\n  ): Promise<GiftCard | null> {\n    const result = await this.baseFind<GiftCard>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      status = null,\n      limit = null,\n      since_id = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<GiftCard>> {\n    const response = await this.baseFind<GiftCard>({\n      session: session,\n      urlIds: {},\n      params: {\"status\": status, \"limit\": limit, \"since_id\": since_id, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      status = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<GiftCard>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {\"status\": status, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async search(\n    {\n      session,\n      order = null,\n      query = null,\n      limit = null,\n      fields = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      returnFullResponse = false,\n      ...otherArgs\n    }: SearchArgs\n  ): Promise<unknown> {\n    const response = await this.request<GiftCard>({\n      http_method: \"get\",\n      operation: \"search\",\n      session: session,\n      urlIds: {},\n      params: {\"order\": order, \"query\": query, \"limit\": limit, \"fields\": fields, \"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return returnFullResponse ? response : response?.body;\n  }\n\n  public async disable(\n    {\n      body = null,\n      ...otherArgs\n    }: DisableArgs\n  ): Promise<unknown> {\n    const response = await this.request<GiftCard>({\n      http_method: \"post\",\n      operation: \"disable\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public api_client_id: number | null;\n  public balance: string | null;\n  public code: string | null;\n  public created_at: string | null;\n  public currency: string | null;\n  public customer_id: number | null;\n  public disabled_at: string | null;\n  public expires_on: string | null;\n  public id: number | null;\n  public initial_value: string | null;\n  public last_characters: string | null;\n  public line_item_id: number | null;\n  public note: string | null;\n  public order_id: number | null;\n  public template_suffix: string | null;\n  public updated_at: string | null;\n  public user_id: number | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {DiscountCode} from './discount_code';\nimport {Order} from './order';\nimport {GiftCard} from './gift_card';\n\ninterface FindArgs {\n  session: Session;\n  token: number | string;\n}\ninterface ShippingRatesArgs {\n  [key: string]: unknown;\n  session: Session;\n  token: number | string;\n}\ninterface CompleteArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class Checkout extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {\n    \"discount_code\": DiscountCode,\n    \"order\": Order\n  };\n  protected static hasMany: {[key: string]: typeof Base} = {\n    \"gift_cards\": GiftCard\n  };\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"token\"], \"path\": \"checkouts/<token>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"shipping_rates\", \"ids\": [\"token\"], \"path\": \"checkouts/<token>/shipping_rates.json\"},\n    {\"http_method\": \"post\", \"operation\": \"complete\", \"ids\": [\"token\"], \"path\": \"checkouts/<token>/complete.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"checkouts.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"token\"], \"path\": \"checkouts/<token>.json\"}\n  ];\n  protected static primaryKey: string = \"token\";\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"checkout\",\n      \"plural\": \"checkouts\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      token\n    }: FindArgs\n  ): Promise<Checkout | null> {\n    const result = await this.baseFind<Checkout>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"token\": token},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async shipping_rates(\n    {\n      session,\n      token,\n      ...otherArgs\n    }: ShippingRatesArgs\n  ): Promise<unknown> {\n    const response = await this.request<Checkout>({\n      http_method: \"get\",\n      operation: \"shipping_rates\",\n      session: session,\n      urlIds: {\"token\": token},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async complete(\n    {\n      body = null,\n      ...otherArgs\n    }: CompleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Checkout>({\n      http_method: \"post\",\n      operation: \"complete\",\n      session: this.session,\n      urlIds: {\"token\": this.token},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public billing_address: {[key: string]: unknown} | null;\n  public line_items: {[key: string]: unknown}[] | null;\n  public applied_discount: {[key: string]: unknown} | null;\n  public buyer_accepts_marketing: boolean | null;\n  public created_at: string | null;\n  public currency: string | null;\n  public customer_id: number | null;\n  public discount_code: DiscountCode | null | {[key: string]: any};\n  public email: string | null;\n  public gift_cards: GiftCard[] | null | {[key: string]: any};\n  public order: Order | null | {[key: string]: any};\n  public payment_due: string | null;\n  public payment_url: string | null;\n  public phone: string | null;\n  public presentment_currency: string | null;\n  public requires_shipping: boolean | null;\n  public reservation_time: string | null;\n  public reservation_time_left: number | null;\n  public shipping_address: {[key: string]: unknown} | null;\n  public shipping_line: {[key: string]: unknown} | null;\n  public shipping_rate: {[key: string]: unknown} | null;\n  public source_identifier: string | null;\n  public source_name: string | null;\n  public source_url: string | null;\n  public subtotal_price: string | null;\n  public tax_lines: {[key: string]: unknown}[] | null;\n  public taxes_included: boolean | null;\n  public token: string | null;\n  public total_price: string | null;\n  public total_tax: string | null;\n  public updated_at: string | null;\n  public user_id: number | null;\n  public web_url: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n  since_id?: unknown;\n  fields?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n}\n\nexport class Collect extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"collects/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"collects/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"collects.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"collects/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"collects.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"collect\",\n      \"plural\": \"collects\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<Collect | null> {\n    const result = await this.baseFind<Collect>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Collect>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      limit = null,\n      since_id = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Collect>> {\n    const response = await this.baseFind<Collect>({\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, \"since_id\": since_id, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Collect>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public collection_id: number | null;\n  public created_at: string | null;\n  public id: number | null;\n  public position: number | null;\n  public product_id: number | null;\n  public sort_value: string | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  product_id?: number | string | null;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n  product_id?: number | string | null;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  product_id?: number | string | null;\n  since_id?: unknown;\n  fields?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  product_id?: number | string | null;\n  since_id?: unknown;\n}\n\nexport class Image extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"product_id\", \"id\"], \"path\": \"products/<product_id>/images/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"product_id\"], \"path\": \"products/<product_id>/images/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"product_id\"], \"path\": \"products/<product_id>/images.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"product_id\", \"id\"], \"path\": \"products/<product_id>/images/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"product_id\"], \"path\": \"products/<product_id>/images.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"product_id\", \"id\"], \"path\": \"products/<product_id>/images/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"image\",\n      \"plural\": \"images\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      product_id = null,\n      fields = null\n    }: FindArgs\n  ): Promise<Image | null> {\n    const result = await this.baseFind<Image>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id, \"product_id\": product_id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id,\n      product_id = null\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Image>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id, \"product_id\": product_id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      product_id = null,\n      since_id = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Image>> {\n    const response = await this.baseFind<Image>({\n      session: session,\n      urlIds: {\"product_id\": product_id},\n      params: {\"since_id\": since_id, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      product_id = null,\n      since_id = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Image>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {\"product_id\": product_id},\n      params: {\"since_id\": since_id, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public created_at: string | null;\n  public height: number | null;\n  public id: number | null;\n  public position: number | null;\n  public product_id: number | null;\n  public src: string | null;\n  public updated_at: string | null;\n  public variant_ids: number[] | null;\n  public width: number | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Image} from './image';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface ProductsArgs {\n  [key: string]: unknown;\n  session: Session;\n  id: number | string;\n  limit?: unknown;\n}\n\nexport class Collection extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {\n    \"image\": Image\n  };\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"collections/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"products\", \"ids\": [\"id\"], \"path\": \"collections/<id>/products.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"collection\",\n      \"plural\": \"collections\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<Collection | null> {\n    const result = await this.baseFind<Collection>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async products(\n    {\n      session,\n      id,\n      limit = null,\n      ...otherArgs\n    }: ProductsArgs\n  ): Promise<unknown> {\n    const response = await this.request<Collection>({\n      http_method: \"get\",\n      operation: \"products\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {\"limit\": limit, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public title: string | null;\n  public body_html: string | null;\n  public handle: string | null;\n  public id: number | null;\n  public image: Image | null | {[key: string]: any};\n  public published_at: string | null;\n  public published_scope: string | null;\n  public sort_order: string | null;\n  public template_suffix: string | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Image} from './image';\n\ninterface FindArgs {\n  session: Session;\n  collection_id: number | string;\n}\ninterface DeleteArgs {\n  session: Session;\n  collection_id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n}\ninterface ProductIdsArgs {\n  [key: string]: unknown;\n  session: Session;\n  collection_id: number | string;\n  limit?: unknown;\n}\n\nexport class CollectionListing extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {\n    \"image\": Image\n  };\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"collection_id\"], \"path\": \"collection_listings/<collection_id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"collection_listings.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"collection_id\"], \"path\": \"collection_listings/<collection_id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"product_ids\", \"ids\": [\"collection_id\"], \"path\": \"collection_listings/<collection_id>/product_ids.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"collection_id\"], \"path\": \"collection_listings/<collection_id>.json\"}\n  ];\n  protected static primaryKey: string = \"collection_id\";\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"collection_listing\",\n      \"plural\": \"collection_listings\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      collection_id\n    }: FindArgs\n  ): Promise<CollectionListing | null> {\n    const result = await this.baseFind<CollectionListing>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"collection_id\": collection_id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      collection_id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<CollectionListing>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"collection_id\": collection_id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      limit = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<CollectionListing>> {\n    const response = await this.baseFind<CollectionListing>({\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async product_ids(\n    {\n      session,\n      collection_id,\n      limit = null,\n      ...otherArgs\n    }: ProductIdsArgs\n  ): Promise<unknown> {\n    const response = await this.request<CollectionListing>({\n      http_method: \"get\",\n      operation: \"product_ids\",\n      session: session,\n      urlIds: {\"collection_id\": collection_id},\n      params: {\"limit\": limit, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public body_html: string | null;\n  public collection_id: number | null;\n  public default_product_image: {[key: string]: unknown}[] | null;\n  public handle: string | null;\n  public image: Image | null | {[key: string]: any};\n  public published_at: string | null;\n  public sort_order: string | null;\n  public title: string | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n  since_id?: unknown;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  published_at_min?: unknown;\n  published_at_max?: unknown;\n  fields?: unknown;\n  published_status?: unknown;\n  status?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  published_at_min?: unknown;\n  published_at_max?: unknown;\n  published_status?: unknown;\n  status?: unknown;\n}\ninterface ApproveArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface NotSpamArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface RemoveArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface RestoreArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface SpamArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class Comment extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"comments/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"comments.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"comments/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"approve\", \"ids\": [\"id\"], \"path\": \"comments/<id>/approve.json\"},\n    {\"http_method\": \"post\", \"operation\": \"not_spam\", \"ids\": [\"id\"], \"path\": \"comments/<id>/not_spam.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"comments.json\"},\n    {\"http_method\": \"post\", \"operation\": \"remove\", \"ids\": [\"id\"], \"path\": \"comments/<id>/remove.json\"},\n    {\"http_method\": \"post\", \"operation\": \"restore\", \"ids\": [\"id\"], \"path\": \"comments/<id>/restore.json\"},\n    {\"http_method\": \"post\", \"operation\": \"spam\", \"ids\": [\"id\"], \"path\": \"comments/<id>/spam.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"comments/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"comment\",\n      \"plural\": \"comments\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<Comment | null> {\n    const result = await this.baseFind<Comment>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      limit = null,\n      since_id = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      published_at_min = null,\n      published_at_max = null,\n      fields = null,\n      published_status = null,\n      status = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Comment>> {\n    const response = await this.baseFind<Comment>({\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, \"since_id\": since_id, \"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"published_at_min\": published_at_min, \"published_at_max\": published_at_max, \"fields\": fields, \"published_status\": published_status, \"status\": status, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      published_at_min = null,\n      published_at_max = null,\n      published_status = null,\n      status = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Comment>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {\"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"published_at_min\": published_at_min, \"published_at_max\": published_at_max, \"published_status\": published_status, \"status\": status, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async approve(\n    {\n      body = null,\n      ...otherArgs\n    }: ApproveArgs\n  ): Promise<unknown> {\n    const response = await this.request<Comment>({\n      http_method: \"post\",\n      operation: \"approve\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async not_spam(\n    {\n      body = null,\n      ...otherArgs\n    }: NotSpamArgs\n  ): Promise<unknown> {\n    const response = await this.request<Comment>({\n      http_method: \"post\",\n      operation: \"not_spam\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async remove(\n    {\n      body = null,\n      ...otherArgs\n    }: RemoveArgs\n  ): Promise<unknown> {\n    const response = await this.request<Comment>({\n      http_method: \"post\",\n      operation: \"remove\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async restore(\n    {\n      body = null,\n      ...otherArgs\n    }: RestoreArgs\n  ): Promise<unknown> {\n    const response = await this.request<Comment>({\n      http_method: \"post\",\n      operation: \"restore\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async spam(\n    {\n      body = null,\n      ...otherArgs\n    }: SpamArgs\n  ): Promise<unknown> {\n    const response = await this.request<Comment>({\n      http_method: \"post\",\n      operation: \"spam\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public article_id: number | null;\n  public author: string | null;\n  public blog_id: number | null;\n  public body: string | null;\n  public body_html: string | null;\n  public created_at: string | null;\n  public email: string | null;\n  public id: number | null;\n  public ip: string | null;\n  public published_at: string | null;\n  public status: string | null;\n  public updated_at: string | null;\n  public user_agent: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  country_id?: number | string | null;\n  fields?: unknown;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  country_id?: number | string | null;\n  since_id?: unknown;\n  fields?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  country_id?: number | string | null;\n}\n\nexport class Province extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"country_id\"], \"path\": \"countries/<country_id>/provinces/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"country_id\"], \"path\": \"countries/<country_id>/provinces.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"country_id\", \"id\"], \"path\": \"countries/<country_id>/provinces/<id>.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"country_id\", \"id\"], \"path\": \"countries/<country_id>/provinces/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"province\",\n      \"plural\": \"provinces\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      country_id = null,\n      fields = null\n    }: FindArgs\n  ): Promise<Province | null> {\n    const result = await this.baseFind<Province>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id, \"country_id\": country_id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      country_id = null,\n      since_id = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Province>> {\n    const response = await this.baseFind<Province>({\n      session: session,\n      urlIds: {\"country_id\": country_id},\n      params: {\"since_id\": since_id, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      country_id = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Province>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {\"country_id\": country_id},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public code: string | null;\n  public country_id: number | null;\n  public id: number | null;\n  public name: string | null;\n  public shipping_zone_id: number | null;\n  public tax: number | null;\n  public tax_name: string | null;\n  public tax_percentage: number | null;\n  public tax_type: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Province} from './province';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  since_id?: unknown;\n  fields?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n}\n\nexport class Country extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {\n    \"provinces\": Province\n  };\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"countries/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"countries/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"countries.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"countries/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"countries.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"countries/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"country\",\n      \"plural\": \"countries\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<Country | null> {\n    const result = await this.baseFind<Country>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Country>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      since_id = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Country>> {\n    const response = await this.baseFind<Country>({\n      session: session,\n      urlIds: {},\n      params: {\"since_id\": since_id, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Country>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public code: string | null;\n  public id: number | null;\n  public name: string | null;\n  public provinces: Province[] | null | {[key: string]: any};\n  public tax: number | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n  ids?: unknown;\n  since_id?: unknown;\n  title?: unknown;\n  product_id?: unknown;\n  handle?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  published_at_min?: unknown;\n  published_at_max?: unknown;\n  published_status?: unknown;\n  fields?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  title?: unknown;\n  product_id?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  published_at_min?: unknown;\n  published_at_max?: unknown;\n  published_status?: unknown;\n}\n\nexport class CustomCollection extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"custom_collections/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"custom_collections/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"custom_collections.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"custom_collections/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"custom_collections.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"custom_collections/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"custom_collection\",\n      \"plural\": \"custom_collections\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<CustomCollection | null> {\n    const result = await this.baseFind<CustomCollection>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<CustomCollection>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      limit = null,\n      ids = null,\n      since_id = null,\n      title = null,\n      product_id = null,\n      handle = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      published_at_min = null,\n      published_at_max = null,\n      published_status = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<CustomCollection>> {\n    const response = await this.baseFind<CustomCollection>({\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, \"ids\": ids, \"since_id\": since_id, \"title\": title, \"product_id\": product_id, \"handle\": handle, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"published_at_min\": published_at_min, \"published_at_max\": published_at_max, \"published_status\": published_status, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      title = null,\n      product_id = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      published_at_min = null,\n      published_at_max = null,\n      published_status = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<CustomCollection>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {\"title\": title, \"product_id\": product_id, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"published_at_min\": published_at_min, \"published_at_max\": published_at_max, \"published_status\": published_status, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public title: string | null;\n  public body_html: string | null;\n  public handle: string | null;\n  public id: number | null;\n  public image: string | {[key: string]: unknown} | null;\n  public published: boolean | null;\n  public published_at: string | null;\n  public published_scope: string | null;\n  public sort_order: string | null;\n  public template_suffix: string | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames, Body} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  customer_id?: number | string | null;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n  customer_id?: number | string | null;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  customer_id?: number | string | null;\n}\ninterface DefaultArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface SetArgs {\n  [key: string]: unknown;\n  address_ids?: unknown[] | number | string | null;\n  operation?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class CustomerAddress extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"customer_id\", \"id\"], \"path\": \"customers/<customer_id>/addresses/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"customer_id\"], \"path\": \"customers/<customer_id>/addresses.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"customer_id\", \"id\"], \"path\": \"customers/<customer_id>/addresses/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"customer_id\"], \"path\": \"customers/<customer_id>/addresses.json\"},\n    {\"http_method\": \"put\", \"operation\": \"default\", \"ids\": [\"customer_id\", \"id\"], \"path\": \"customers/<customer_id>/addresses/<id>/default.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"customer_id\", \"id\"], \"path\": \"customers/<customer_id>/addresses/<id>.json\"},\n    {\"http_method\": \"put\", \"operation\": \"set\", \"ids\": [\"customer_id\"], \"path\": \"customers/<customer_id>/addresses/set.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"customer_address\",\n      \"plural\": \"customer_addresses\"\n    },\n    {\n      \"singular\": \"address\",\n      \"plural\": \"addresses\"\n    }\n  ];\n\n  protected static getJsonBodyName(): string\n  {\n    return \"address\";\n  }\n\n  protected setData(data: Body): void {\n    if (this.resource().config.future?.customerAddressDefaultFix) {\n      if ('default' in data) {\n        data['is_default'] = Boolean(data['default']);\n        delete data['default'];\n      } else {\n        data['is_default'] = false;\n      }\n    }\n\n    return super.setData(data);\n  }\n\n  public static async find(\n    {\n      session,\n      id,\n      customer_id = null\n    }: FindArgs\n  ): Promise<CustomerAddress | null> {\n    const result = await this.baseFind<CustomerAddress>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id, \"customer_id\": customer_id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id,\n      customer_id = null\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<CustomerAddress>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id, \"customer_id\": customer_id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      customer_id = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<CustomerAddress>> {\n    const response = await this.baseFind<CustomerAddress>({\n      session: session,\n      urlIds: {\"customer_id\": customer_id},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public async default(\n    {\n      body = null,\n      ...otherArgs\n    }: DefaultArgs\n  ): Promise<unknown> {\n    const response = await this.request<CustomerAddress>({\n      http_method: \"put\",\n      operation: \"default\",\n      session: this.session,\n      urlIds: {\"id\": this.id, \"customer_id\": this.customer_id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async set(\n    {\n      address_ids = null,\n      operation = null,\n      body = null,\n      ...otherArgs\n    }: SetArgs\n  ): Promise<unknown> {\n    const response = await this.request<CustomerAddress>({\n      http_method: \"put\",\n      operation: \"set\",\n      session: this.session,\n      urlIds: {\"customer_id\": this.customer_id},\n      params: {\"address_ids\": address_ids, \"operation\": operation, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public address1: string | null;\n  public address2: string | null;\n  public city: string | null;\n  public company: string | null;\n  public country: string | null;\n  public country_code: string | null;\n  public country_name: string | null;\n  public customer_id: number | null;\n  public first_name: string | null;\n  public id: number | null;\n  public is_default: boolean | null;\n  public last_name: string | null;\n  public name: string | null;\n  public phone: string | null;\n  public province: string | null;\n  public province_code: string | null;\n  public zip: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n}\n\nexport class DeprecatedApiCall extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"deprecated_api_calls.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"deprecated_api_call\",\n      \"plural\": \"deprecated_api_calls\"\n    }\n  ];\n\n  public static async all(\n    {\n      session,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<DeprecatedApiCall>> {\n    const response = await this.baseFind<DeprecatedApiCall>({\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public data_updated_at: string | null;\n  public deprecated_api_calls: {[key: string]: unknown}[] | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  since_id?: unknown;\n  last_id?: unknown;\n  status?: unknown;\n  initiated_at?: unknown;\n}\n\nexport class Dispute extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"shopify_payments/disputes.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"shopify_payments/disputes/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"dispute\",\n      \"plural\": \"disputes\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id\n    }: FindArgs\n  ): Promise<Dispute | null> {\n    const result = await this.baseFind<Dispute>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      since_id = null,\n      last_id = null,\n      status = null,\n      initiated_at = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Dispute>> {\n    const response = await this.baseFind<Dispute>({\n      session: session,\n      urlIds: {},\n      params: {\"since_id\": since_id, \"last_id\": last_id, \"status\": status, \"initiated_at\": initiated_at, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public amount: string | null;\n  public currency: string | null;\n  public evidence_due_by: string | null;\n  public evidence_sent_on: string | null;\n  public finalized_on: string | null;\n  public id: number | null;\n  public network_reason_code: string | null;\n  public order_id: number | null;\n  public reason: string | null;\n  public status: string | null;\n  public type: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Fulfillment} from './fulfillment';\n\ninterface FindArgs {\n  session: Session;\n  dispute_id: number | string;\n}\n\nexport class DisputeEvidence extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {\n    \"fulfillments\": Fulfillment\n  };\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"dispute_id\"], \"path\": \"shopify_payments/disputes/<dispute_id>/dispute_evidences.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"dispute_id\"], \"path\": \"shopify_payments/disputes/<dispute_id>/dispute_evidences.json\"}\n  ];\n  protected static primaryKey: string = \"dispute_id\";\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"dispute_evidence\",\n      \"plural\": \"dispute_evidences\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      dispute_id\n    }: FindArgs\n  ): Promise<DisputeEvidence | null> {\n    const result = await this.baseFind<DisputeEvidence>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"dispute_id\": dispute_id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public access_activity_log: string | null;\n  public billing_address: {[key: string]: unknown} | null;\n  public cancellation_policy_disclosure: string | null;\n  public cancellation_rebuttal: string | null;\n  public created_at: string | null;\n  public customer_email_address: string | null;\n  public customer_first_name: string | null;\n  public customer_last_name: string | null;\n  public dispute_evidence_files: {[key: string]: unknown} | null;\n  public fulfillments: Fulfillment[] | null | {[key: string]: any};\n  public id: number | null;\n  public payments_dispute_id: number | null;\n  public product_description: {[key: string]: unknown} | null;\n  public refund_policy_disclosure: string | null;\n  public refund_refusal_explanation: string | null;\n  public shipping_address: {[key: string]: unknown} | null;\n  public submitted: boolean | null;\n  public uncategorized_text: string | null;\n  public updated_on: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n  dispute_id?: number | string | null;\n}\n\nexport class DisputeFileUpload extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"dispute_id\", \"id\"], \"path\": \"shopify_payments/disputes/<dispute_id>/dispute_file_uploads/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"dispute_id\"], \"path\": \"shopify_payments/disputes/<dispute_id>/dispute_file_uploads.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"dispute_file_upload\",\n      \"plural\": \"dispute_file_uploads\"\n    }\n  ];\n\n  public static async delete(\n    {\n      session,\n      id,\n      dispute_id = null\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<DisputeFileUpload>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id, \"dispute_id\": dispute_id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public dispute_evidence_id: number | null;\n  public dispute_evidence_type: string | null;\n  public file_size: number | null;\n  public file_type: string | null;\n  public filename: string | null;\n  public id: number | null;\n  public original_filename: string | null;\n  public shop_id: number | null;\n  public url: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Customer} from './customer';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  fields?: unknown;\n  limit?: unknown;\n  since_id?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  ids?: unknown;\n  status?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  since_id?: unknown;\n  status?: unknown;\n  updated_at_max?: unknown;\n  updated_at_min?: unknown;\n}\ninterface SendInvoiceArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface CompleteArgs {\n  [key: string]: unknown;\n  payment_gateway_id?: unknown;\n  payment_pending?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class DraftOrder extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {\n    \"customer\": Customer\n  };\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"draft_orders/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"draft_orders/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"draft_orders.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"draft_orders/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"draft_orders.json\"},\n    {\"http_method\": \"post\", \"operation\": \"send_invoice\", \"ids\": [\"id\"], \"path\": \"draft_orders/<id>/send_invoice.json\"},\n    {\"http_method\": \"put\", \"operation\": \"complete\", \"ids\": [\"id\"], \"path\": \"draft_orders/<id>/complete.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"draft_orders/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"draft_order\",\n      \"plural\": \"draft_orders\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<DraftOrder | null> {\n    const result = await this.baseFind<DraftOrder>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<DraftOrder>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      fields = null,\n      limit = null,\n      since_id = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      ids = null,\n      status = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<DraftOrder>> {\n    const response = await this.baseFind<DraftOrder>({\n      session: session,\n      urlIds: {},\n      params: {\"fields\": fields, \"limit\": limit, \"since_id\": since_id, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"ids\": ids, \"status\": status, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      since_id = null,\n      status = null,\n      updated_at_max = null,\n      updated_at_min = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<DraftOrder>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {\"since_id\": since_id, \"status\": status, \"updated_at_max\": updated_at_max, \"updated_at_min\": updated_at_min, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async send_invoice(\n    {\n      body = null,\n      ...otherArgs\n    }: SendInvoiceArgs\n  ): Promise<unknown> {\n    const response = await this.request<DraftOrder>({\n      http_method: \"post\",\n      operation: \"send_invoice\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async complete(\n    {\n      payment_gateway_id = null,\n      payment_pending = null,\n      body = null,\n      ...otherArgs\n    }: CompleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<DraftOrder>({\n      http_method: \"put\",\n      operation: \"complete\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {\"payment_gateway_id\": payment_gateway_id, \"payment_pending\": payment_pending, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public applied_discount: {[key: string]: unknown} | null;\n  public billing_address: {[key: string]: unknown} | null;\n  public completed_at: string | null;\n  public created_at: string | null;\n  public currency: string | null;\n  public customer: Customer | null | {[key: string]: any};\n  public email: string | null;\n  public id: number | null;\n  public invoice_sent_at: string | null;\n  public invoice_url: string | null;\n  public line_items: {[key: string]: unknown}[] | null;\n  public name: string | null;\n  public note: string | null;\n  public note_attributes: {[key: string]: unknown}[] | null;\n  public order_id: number | null;\n  public payment_terms: {[key: string]: unknown} | null;\n  public shipping_address: {[key: string]: unknown} | null;\n  public shipping_line: {[key: string]: unknown} | null;\n  public source_name: string | null;\n  public status: string | null;\n  public subtotal_price: string | null;\n  public tags: string | null;\n  public tax_exempt: boolean | null;\n  public tax_exemptions: string[] | null;\n  public tax_lines: {[key: string]: unknown}[] | null;\n  public taxes_included: boolean | null;\n  public total_price: string | null;\n  public total_tax: string | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  order_id?: number | string | null;\n  product_id?: number | string | null;\n  limit?: unknown;\n  since_id?: unknown;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  filter?: unknown;\n  verb?: unknown;\n  fields?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n}\n\nexport class Event extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"events/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"events.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"events/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\"], \"path\": \"orders/<order_id>/events.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"product_id\"], \"path\": \"products/<product_id>/events.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"event\",\n      \"plural\": \"events\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<Event | null> {\n    const result = await this.baseFind<Event>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      order_id = null,\n      product_id = null,\n      limit = null,\n      since_id = null,\n      created_at_min = null,\n      created_at_max = null,\n      filter = null,\n      verb = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Event>> {\n    const response = await this.baseFind<Event>({\n      session: session,\n      urlIds: {\"order_id\": order_id, \"product_id\": product_id},\n      params: {\"limit\": limit, \"since_id\": since_id, \"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"filter\": filter, \"verb\": verb, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      created_at_min = null,\n      created_at_max = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Event>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {\"created_at_min\": created_at_min, \"created_at_max\": created_at_max, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public arguments: string[] | null;\n  public body: string | null;\n  public created_at: string | null;\n  public description: string | null;\n  public id: number | null;\n  public message: string | null;\n  public path: string | null;\n  public subject_id: number | null;\n  public subject_type: string | null;\n  public verb: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Country} from './country';\nimport {Province} from './province';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  order_id?: number | string | null;\n  fulfillment_id?: number | string | null;\n  event_id?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n  order_id?: number | string | null;\n  fulfillment_id?: number | string | null;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  order_id?: number | string | null;\n  fulfillment_id?: number | string | null;\n}\n\nexport class FulfillmentEvent extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {\n    \"country\": Country,\n    \"province\": Province\n  };\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"order_id\", \"fulfillment_id\", \"id\"], \"path\": \"orders/<order_id>/fulfillments/<fulfillment_id>/events/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\", \"fulfillment_id\"], \"path\": \"orders/<order_id>/fulfillments/<fulfillment_id>/events.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\", \"fulfillment_id\", \"id\"], \"path\": \"orders/<order_id>/fulfillments/<fulfillment_id>/events/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"order_id\", \"fulfillment_id\"], \"path\": \"orders/<order_id>/fulfillments/<fulfillment_id>/events.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"fulfillment_event\",\n      \"plural\": \"fulfillment_events\"\n    }\n  ];\n\n  protected static getJsonBodyName(): string\n  {\n    return \"event\";\n  }\n\n  public static async find(\n    {\n      session,\n      id,\n      order_id = null,\n      fulfillment_id = null,\n      event_id = null\n    }: FindArgs\n  ): Promise<FulfillmentEvent | null> {\n    const result = await this.baseFind<FulfillmentEvent>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id, \"order_id\": order_id, \"fulfillment_id\": fulfillment_id},\n      params: {\"event_id\": event_id},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id,\n      order_id = null,\n      fulfillment_id = null\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<FulfillmentEvent>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id, \"order_id\": order_id, \"fulfillment_id\": fulfillment_id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      order_id = null,\n      fulfillment_id = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<FulfillmentEvent>> {\n    const response = await this.baseFind<FulfillmentEvent>({\n      session: session,\n      urlIds: {\"order_id\": order_id, \"fulfillment_id\": fulfillment_id},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public address1: string | null;\n  public city: string | null;\n  public country: Country | null | {[key: string]: any};\n  public created_at: string | null;\n  public estimated_delivery_at: string | null;\n  public fulfillment_id: number | null;\n  public happened_at: string | null;\n  public id: number | null;\n  public latitude: number | null;\n  public longitude: number | null;\n  public message: string | null;\n  public order_id: number | null;\n  public province: Province | null | {[key: string]: any};\n  public shop_id: number | null;\n  public status: string | null;\n  public updated_at: string | null;\n  public zip: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  include_financial_summaries?: unknown;\n  include_order_reference_fields?: unknown;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  order_id?: number | string | null;\n  include_financial_summaries?: unknown;\n  include_order_reference_fields?: unknown;\n}\ninterface CancelArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface CloseArgs {\n  [key: string]: unknown;\n  message?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface HoldArgs {\n  [key: string]: unknown;\n  fulfillment_hold?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface MoveArgs {\n  [key: string]: unknown;\n  fulfillment_order?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface OpenArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface ReleaseHoldArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface RescheduleArgs {\n  [key: string]: unknown;\n  new_fulfill_at?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface SetFulfillmentOrdersDeadlineArgs {\n  [key: string]: unknown;\n  fulfillment_order_ids?: unknown;\n  fulfillment_deadline?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class FulfillmentOrder extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"fulfillment_orders/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\"], \"path\": \"orders/<order_id>/fulfillment_orders.json\"},\n    {\"http_method\": \"post\", \"operation\": \"cancel\", \"ids\": [\"id\"], \"path\": \"fulfillment_orders/<id>/cancel.json\"},\n    {\"http_method\": \"post\", \"operation\": \"close\", \"ids\": [\"id\"], \"path\": \"fulfillment_orders/<id>/close.json\"},\n    {\"http_method\": \"post\", \"operation\": \"hold\", \"ids\": [\"id\"], \"path\": \"fulfillment_orders/<id>/hold.json\"},\n    {\"http_method\": \"post\", \"operation\": \"move\", \"ids\": [\"id\"], \"path\": \"fulfillment_orders/<id>/move.json\"},\n    {\"http_method\": \"post\", \"operation\": \"open\", \"ids\": [\"id\"], \"path\": \"fulfillment_orders/<id>/open.json\"},\n    {\"http_method\": \"post\", \"operation\": \"release_hold\", \"ids\": [\"id\"], \"path\": \"fulfillment_orders/<id>/release_hold.json\"},\n    {\"http_method\": \"post\", \"operation\": \"reschedule\", \"ids\": [\"id\"], \"path\": \"fulfillment_orders/<id>/reschedule.json\"},\n    {\"http_method\": \"post\", \"operation\": \"set_fulfillment_orders_deadline\", \"ids\": [], \"path\": \"fulfillment_orders/set_fulfillment_orders_deadline.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"fulfillment_order\",\n      \"plural\": \"fulfillment_orders\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      include_financial_summaries = null,\n      include_order_reference_fields = null\n    }: FindArgs\n  ): Promise<FulfillmentOrder | null> {\n    const result = await this.baseFind<FulfillmentOrder>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"include_financial_summaries\": include_financial_summaries, \"include_order_reference_fields\": include_order_reference_fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      order_id = null,\n      include_financial_summaries = null,\n      include_order_reference_fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<FulfillmentOrder>> {\n    const response = await this.baseFind<FulfillmentOrder>({\n      session: session,\n      urlIds: {\"order_id\": order_id},\n      params: {\"include_financial_summaries\": include_financial_summaries, \"include_order_reference_fields\": include_order_reference_fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public async cancel(\n    {\n      body = null,\n      ...otherArgs\n    }: CancelArgs\n  ): Promise<unknown> {\n    const response = await this.request<FulfillmentOrder>({\n      http_method: \"post\",\n      operation: \"cancel\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async close(\n    {\n      message = null,\n      body = null,\n      ...otherArgs\n    }: CloseArgs\n  ): Promise<unknown> {\n    const response = await this.request<FulfillmentOrder>({\n      http_method: \"post\",\n      operation: \"close\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {\"message\": message, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async hold(\n    {\n      fulfillment_hold = null,\n      body = null,\n      ...otherArgs\n    }: HoldArgs\n  ): Promise<unknown> {\n    const response = await this.request<FulfillmentOrder>({\n      http_method: \"post\",\n      operation: \"hold\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {\"fulfillment_hold\": fulfillment_hold, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async move(\n    {\n      fulfillment_order = null,\n      body = null,\n      ...otherArgs\n    }: MoveArgs\n  ): Promise<unknown> {\n    const response = await this.request<FulfillmentOrder>({\n      http_method: \"post\",\n      operation: \"move\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {\"fulfillment_order\": fulfillment_order, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async open(\n    {\n      body = null,\n      ...otherArgs\n    }: OpenArgs\n  ): Promise<unknown> {\n    const response = await this.request<FulfillmentOrder>({\n      http_method: \"post\",\n      operation: \"open\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async release_hold(\n    {\n      body = null,\n      ...otherArgs\n    }: ReleaseHoldArgs\n  ): Promise<unknown> {\n    const response = await this.request<FulfillmentOrder>({\n      http_method: \"post\",\n      operation: \"release_hold\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async reschedule(\n    {\n      new_fulfill_at = null,\n      body = null,\n      ...otherArgs\n    }: RescheduleArgs\n  ): Promise<unknown> {\n    const response = await this.request<FulfillmentOrder>({\n      http_method: \"post\",\n      operation: \"reschedule\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {\"new_fulfill_at\": new_fulfill_at, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async set_fulfillment_orders_deadline(\n    {\n      fulfillment_order_ids = null,\n      fulfillment_deadline = null,\n      body = null,\n      ...otherArgs\n    }: SetFulfillmentOrdersDeadlineArgs\n  ): Promise<unknown> {\n    const response = await this.request<FulfillmentOrder>({\n      http_method: \"post\",\n      operation: \"set_fulfillment_orders_deadline\",\n      session: this.session,\n      urlIds: {},\n      params: {\"fulfillment_order_ids\": fulfillment_order_ids, \"fulfillment_deadline\": fulfillment_deadline, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public assigned_location: {[key: string]: unknown} | null;\n  public assigned_location_id: number | null;\n  public created_at: string | null;\n  public delivery_method: {[key: string]: unknown} | null;\n  public destination: {[key: string]: unknown} | null;\n  public fulfill_at: string | null;\n  public fulfill_by: string | null;\n  public fulfillment_holds: {[key: string]: unknown}[] | null;\n  public id: number | null;\n  public international_duties: {[key: string]: unknown} | null;\n  public line_items: {[key: string]: unknown}[] | null;\n  public merchant_requests: {[key: string]: unknown}[] | null;\n  public order_id: number | null;\n  public request_status: string | null;\n  public shop_id: number | null;\n  public status: string | null;\n  public supported_actions: string[] | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface AcceptArgs {\n  [key: string]: unknown;\n  message?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface RejectArgs {\n  [key: string]: unknown;\n  message?: unknown;\n  reason?: unknown;\n  line_items?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class FulfillmentRequest extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"post\", \"operation\": \"accept\", \"ids\": [\"fulfillment_order_id\"], \"path\": \"fulfillment_orders/<fulfillment_order_id>/fulfillment_request/accept.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"fulfillment_order_id\"], \"path\": \"fulfillment_orders/<fulfillment_order_id>/fulfillment_request.json\"},\n    {\"http_method\": \"post\", \"operation\": \"reject\", \"ids\": [\"fulfillment_order_id\"], \"path\": \"fulfillment_orders/<fulfillment_order_id>/fulfillment_request/reject.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"submitted_fulfillment_order\",\n      \"plural\": \"submitted_fulfillment_orders\"\n    },\n    {\n      \"singular\": \"fulfillment_order\",\n      \"plural\": \"fulfillment_orders\"\n    }\n  ];\n\n  public async accept(\n    {\n      message = null,\n      body = null,\n      ...otherArgs\n    }: AcceptArgs\n  ): Promise<unknown> {\n    const response = await this.request<FulfillmentRequest>({\n      http_method: \"post\",\n      operation: \"accept\",\n      session: this.session,\n      urlIds: {\"fulfillment_order_id\": this.fulfillment_order_id},\n      params: {\"message\": message, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async reject(\n    {\n      message = null,\n      reason = null,\n      line_items = null,\n      body = null,\n      ...otherArgs\n    }: RejectArgs\n  ): Promise<unknown> {\n    const response = await this.request<FulfillmentRequest>({\n      http_method: \"post\",\n      operation: \"reject\",\n      session: this.session,\n      urlIds: {\"fulfillment_order_id\": this.fulfillment_order_id},\n      params: {\"message\": message, \"reason\": reason, \"line_items\": line_items, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public fulfillment_order_id: number | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  scope?: unknown;\n}\n\nexport class FulfillmentService extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"fulfillment_services/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"fulfillment_services.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"fulfillment_services/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"fulfillment_services.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"fulfillment_services/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"fulfillment_service\",\n      \"plural\": \"fulfillment_services\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id\n    }: FindArgs\n  ): Promise<FulfillmentService | null> {\n    const result = await this.baseFind<FulfillmentService>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<FulfillmentService>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      scope = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<FulfillmentService>> {\n    const response = await this.baseFind<FulfillmentService>({\n      session: session,\n      urlIds: {},\n      params: {\"scope\": scope, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public admin_graphql_api_id: string | null;\n  public callback_url: string | null;\n  public fulfillment_orders_opt_in: boolean | null;\n  public handle: string | null;\n  public id: number | null;\n  public inventory_management: boolean | null;\n  public location_id: number | null;\n  public name: string | null;\n  public permits_sku_sharing: boolean | null;\n  public provider_id: string | null;\n  public requires_shipping_method: boolean | null;\n  public tracking_support: boolean | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  gift_card_id?: number | string | null;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  gift_card_id?: number | string | null;\n}\n\nexport class GiftCardAdjustment extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"gift_card_id\"], \"path\": \"gift_cards/<gift_card_id>/adjustments.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"gift_card_id\", \"id\"], \"path\": \"gift_cards/<gift_card_id>/adjustments/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"gift_card_id\"], \"path\": \"gift_cards/<gift_card_id>/adjustments.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"gift_card_adjustment\",\n      \"plural\": \"gift_card_adjustments\"\n    }\n  ];\n\n  protected static getJsonBodyName(): string\n  {\n    return \"adjustment\";\n  }\n\n  public static async find(\n    {\n      session,\n      id,\n      gift_card_id = null\n    }: FindArgs\n  ): Promise<GiftCardAdjustment | null> {\n    const result = await this.baseFind<GiftCardAdjustment>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id, \"gift_card_id\": gift_card_id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      gift_card_id = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<GiftCardAdjustment>> {\n    const response = await this.baseFind<GiftCardAdjustment>({\n      session: session,\n      urlIds: {\"gift_card_id\": gift_card_id},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public amount: number | null;\n  public api_client_id: number | null;\n  public created_at: string | null;\n  public gift_card_id: number | null;\n  public id: number | null;\n  public note: string | null;\n  public number: number | null;\n  public order_transaction_id: number | null;\n  public processed_at: string | null;\n  public remote_transaction_ref: string | null;\n  public remote_transaction_url: string | null;\n  public user_id: number | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  ids?: unknown;\n  limit?: unknown;\n}\n\nexport class InventoryItem extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"inventory_items.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"inventory_items/<id>.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"inventory_items/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"inventory_item\",\n      \"plural\": \"inventory_items\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id\n    }: FindArgs\n  ): Promise<InventoryItem | null> {\n    const result = await this.baseFind<InventoryItem>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      ids = null,\n      limit = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<InventoryItem>> {\n    const response = await this.baseFind<InventoryItem>({\n      session: session,\n      urlIds: {},\n      params: {\"ids\": ids, \"limit\": limit, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public cost: string | null;\n  public country_code_of_origin: string | null;\n  public country_harmonized_system_codes: {[key: string]: unknown}[] | null;\n  public created_at: string | null;\n  public harmonized_system_code: number | null;\n  public id: number | null;\n  public province_code_of_origin: string | null;\n  public requires_shipping: boolean | null;\n  public sku: string | null;\n  public tracked: boolean | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface DeleteArgs {\n  session: Session;\n  inventory_item_id?: unknown;\n  location_id?: unknown;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  inventory_item_ids?: unknown;\n  location_ids?: unknown;\n  limit?: unknown;\n  updated_at_min?: unknown;\n}\ninterface AdjustArgs {\n  [key: string]: unknown;\n  inventory_item_id?: unknown;\n  location_id?: unknown;\n  available_adjustment?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface ConnectArgs {\n  [key: string]: unknown;\n  inventory_item_id?: unknown;\n  location_id?: unknown;\n  relocate_if_necessary?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface SetArgs {\n  [key: string]: unknown;\n  inventory_item_id?: unknown;\n  location_id?: unknown;\n  available?: unknown;\n  disconnect_if_necessary?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class InventoryLevel extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [], \"path\": \"inventory_levels.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"inventory_levels.json\"},\n    {\"http_method\": \"post\", \"operation\": \"adjust\", \"ids\": [], \"path\": \"inventory_levels/adjust.json\"},\n    {\"http_method\": \"post\", \"operation\": \"connect\", \"ids\": [], \"path\": \"inventory_levels/connect.json\"},\n    {\"http_method\": \"post\", \"operation\": \"set\", \"ids\": [], \"path\": \"inventory_levels/set.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"inventory_level\",\n      \"plural\": \"inventory_levels\"\n    }\n  ];\n\n  public static async delete(\n    {\n      session,\n      inventory_item_id = null,\n      location_id = null\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<InventoryLevel>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {},\n      params: {\"inventory_item_id\": inventory_item_id, \"location_id\": location_id},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      inventory_item_ids = null,\n      location_ids = null,\n      limit = null,\n      updated_at_min = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<InventoryLevel>> {\n    const response = await this.baseFind<InventoryLevel>({\n      session: session,\n      urlIds: {},\n      params: {\"inventory_item_ids\": inventory_item_ids, \"location_ids\": location_ids, \"limit\": limit, \"updated_at_min\": updated_at_min, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public async adjust(\n    {\n      inventory_item_id = null,\n      location_id = null,\n      available_adjustment = null,\n      body = null,\n      ...otherArgs\n    }: AdjustArgs\n  ): Promise<unknown> {\n    const response = await this.request<InventoryLevel>({\n      http_method: \"post\",\n      operation: \"adjust\",\n      session: this.session,\n      urlIds: {},\n      params: {\"inventory_item_id\": inventory_item_id, \"location_id\": location_id, \"available_adjustment\": available_adjustment, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async connect(\n    {\n      inventory_item_id = null,\n      location_id = null,\n      relocate_if_necessary = null,\n      body = null,\n      ...otherArgs\n    }: ConnectArgs\n  ): Promise<unknown> {\n    const response = await this.request<InventoryLevel>({\n      http_method: \"post\",\n      operation: \"connect\",\n      session: this.session,\n      urlIds: {},\n      params: {\"inventory_item_id\": inventory_item_id, \"location_id\": location_id, \"relocate_if_necessary\": relocate_if_necessary, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async set(\n    {\n      inventory_item_id = null,\n      location_id = null,\n      available = null,\n      disconnect_if_necessary = null,\n      body = null,\n      ...otherArgs\n    }: SetArgs\n  ): Promise<unknown> {\n    const response = await this.request<InventoryLevel>({\n      http_method: \"post\",\n      operation: \"set\",\n      session: this.session,\n      urlIds: {},\n      params: {\"inventory_item_id\": inventory_item_id, \"location_id\": location_id, \"available\": available, \"disconnect_if_necessary\": disconnect_if_necessary, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public available: number | null;\n  public inventory_item_id: number | null;\n  public location_id: number | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n}\ninterface InventoryLevelsArgs {\n  [key: string]: unknown;\n  session: Session;\n  id: number | string;\n}\n\nexport class Location extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"locations/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"locations.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"locations/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"inventory_levels\", \"ids\": [\"id\"], \"path\": \"locations/<id>/inventory_levels.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"location\",\n      \"plural\": \"locations\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id\n    }: FindArgs\n  ): Promise<Location | null> {\n    const result = await this.baseFind<Location>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Location>> {\n    const response = await this.baseFind<Location>({\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Location>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async inventory_levels(\n    {\n      session,\n      id,\n      ...otherArgs\n    }: InventoryLevelsArgs\n  ): Promise<unknown> {\n    const response = await this.request<Location>({\n      http_method: \"get\",\n      operation: \"inventory_levels\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public active: boolean | null;\n  public address1: string | null;\n  public address2: string | null;\n  public city: string | null;\n  public country: string | null;\n  public country_code: string | null;\n  public created_at: string | null;\n  public id: number | null;\n  public legacy: boolean | null;\n  public localized_country_name: string | null;\n  public localized_province_name: string | null;\n  public name: string | null;\n  public phone: string | null;\n  public province: string | null;\n  public province_code: string | null;\n  public updated_at: string | null;\n  public zip: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  fulfillment_order_id?: number | string | null;\n}\n\nexport class LocationsForMove extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"fulfillment_order_id\"], \"path\": \"fulfillment_orders/<fulfillment_order_id>/locations_for_move.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"locations_for_move\",\n      \"plural\": \"locations_for_moves\"\n    }\n  ];\n\n  public static async all(\n    {\n      session,\n      fulfillment_order_id = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<LocationsForMove>> {\n    const response = await this.baseFind<LocationsForMove>({\n      session: session,\n      urlIds: {\"fulfillment_order_id\": fulfillment_order_id},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public locations_for_move: {[key: string]: unknown}[] | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n  offset?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n}\ninterface EngagementsArgs {\n  [key: string]: unknown;\n  occurred_on?: unknown;\n  impressions_count?: unknown;\n  views_count?: unknown;\n  clicks_count?: unknown;\n  shares_count?: unknown;\n  favorites_count?: unknown;\n  comments_count?: unknown;\n  ad_spend?: unknown;\n  is_cumulative?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class MarketingEvent extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"marketing_events/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"marketing_events/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"marketing_events.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"marketing_events/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"engagements\", \"ids\": [\"id\"], \"path\": \"marketing_events/<id>/engagements.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"marketing_events.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"marketing_events/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"marketing_event\",\n      \"plural\": \"marketing_events\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id\n    }: FindArgs\n  ): Promise<MarketingEvent | null> {\n    const result = await this.baseFind<MarketingEvent>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<MarketingEvent>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      limit = null,\n      offset = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<MarketingEvent>> {\n    const response = await this.baseFind<MarketingEvent>({\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, \"offset\": offset, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<MarketingEvent>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async engagements(\n    {\n      occurred_on = null,\n      impressions_count = null,\n      views_count = null,\n      clicks_count = null,\n      shares_count = null,\n      favorites_count = null,\n      comments_count = null,\n      ad_spend = null,\n      is_cumulative = null,\n      body = null,\n      ...otherArgs\n    }: EngagementsArgs\n  ): Promise<unknown> {\n    const response = await this.request<MarketingEvent>({\n      http_method: \"post\",\n      operation: \"engagements\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {\"occurred_on\": occurred_on, \"impressions_count\": impressions_count, \"views_count\": views_count, \"clicks_count\": clicks_count, \"shares_count\": shares_count, \"favorites_count\": favorites_count, \"comments_count\": comments_count, \"ad_spend\": ad_spend, \"is_cumulative\": is_cumulative, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public event_type: string | null;\n  public marketing_channel: string | null;\n  public paid: boolean | null;\n  public started_at: string | null;\n  public UTM_parameters: {[key: string]: unknown} | null;\n  public budget: string | null;\n  public budget_type: string | null;\n  public currency: string | null;\n  public description: string | null;\n  public ended_at: string | null;\n  public id: number | null;\n  public manage_url: string | null;\n  public marketed_resources: {[key: string]: unknown}[] | null;\n  public preview_url: string | null;\n  public referring_domain: string | null;\n  public remote_id: string | null;\n  public scheduled_to_end_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n}\n\nexport class MobilePlatformApplication extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"mobile_platform_applications/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"mobile_platform_applications.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"mobile_platform_applications/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"mobile_platform_applications.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"mobile_platform_applications/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"mobile_platform_application\",\n      \"plural\": \"mobile_platform_applications\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id\n    }: FindArgs\n  ): Promise<MobilePlatformApplication | null> {\n    const result = await this.baseFind<MobilePlatformApplication>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<MobilePlatformApplication>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<MobilePlatformApplication>> {\n    const response = await this.baseFind<MobilePlatformApplication>({\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public application_id: string | null;\n  public enabled_shared_webcredentials: boolean | null;\n  public enabled_universal_or_app_links: boolean | null;\n  public id: number | null;\n  public platform: string | null;\n  public sha256_cert_fingerprints: string[] | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  order_id?: number | string | null;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n  order_id?: number | string | null;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  order_id?: number | string | null;\n}\n\nexport class OrderRisk extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"order_id\", \"id\"], \"path\": \"orders/<order_id>/risks/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\"], \"path\": \"orders/<order_id>/risks.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\", \"id\"], \"path\": \"orders/<order_id>/risks/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"order_id\"], \"path\": \"orders/<order_id>/risks.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"order_id\", \"id\"], \"path\": \"orders/<order_id>/risks/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"risk\",\n      \"plural\": \"risks\"\n    }\n  ];\n\n  protected static getJsonBodyName(): string\n  {\n    return \"risk\";\n  }\n\n  public static async find(\n    {\n      session,\n      id,\n      order_id = null\n    }: FindArgs\n  ): Promise<OrderRisk | null> {\n    const result = await this.baseFind<OrderRisk>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id, \"order_id\": order_id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id,\n      order_id = null\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<OrderRisk>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id, \"order_id\": order_id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      order_id = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<OrderRisk>> {\n    const response = await this.baseFind<OrderRisk>({\n      session: session,\n      urlIds: {\"order_id\": order_id},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public cause_cancel: boolean | null;\n  public checkout_id: number | null;\n  public display: boolean | null;\n  public id: number | null;\n  public merchant_message: string | null;\n  public message: string | null;\n  public order_id: number | null;\n  public recommendation: string | null;\n  public score: string | null;\n  public source: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Metafield} from './metafield';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n  since_id?: unknown;\n  title?: unknown;\n  handle?: unknown;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  published_at_min?: unknown;\n  published_at_max?: unknown;\n  fields?: unknown;\n  published_status?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  title?: unknown;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  published_at_min?: unknown;\n  published_at_max?: unknown;\n  published_status?: unknown;\n}\n\nexport class Page extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {\n    \"metafield\": Metafield\n  };\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"pages/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"pages/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"pages.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"pages/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"pages.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"pages/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"page\",\n      \"plural\": \"pages\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<Page | null> {\n    const result = await this.baseFind<Page>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Page>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      limit = null,\n      since_id = null,\n      title = null,\n      handle = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      published_at_min = null,\n      published_at_max = null,\n      fields = null,\n      published_status = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Page>> {\n    const response = await this.baseFind<Page>({\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, \"since_id\": since_id, \"title\": title, \"handle\": handle, \"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"published_at_min\": published_at_min, \"published_at_max\": published_at_max, \"fields\": fields, \"published_status\": published_status, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      title = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      published_at_min = null,\n      published_at_max = null,\n      published_status = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Page>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {\"title\": title, \"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"published_at_min\": published_at_min, \"published_at_max\": published_at_max, \"published_status\": published_status, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public admin_graphql_api_id: string | null;\n  public author: string | null;\n  public body_html: string | null;\n  public created_at: string | null;\n  public handle: string | null;\n  public id: number | null;\n  public metafield: Metafield | null | {[key: string]: any};\n  public published_at: string | null;\n  public shop_id: number | null;\n  public template_suffix: string | null;\n  public title: string | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Transaction} from './transaction';\nimport {Checkout} from './checkout';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  checkout_id?: number | string | null;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  checkout_id?: number | string | null;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  checkout_id?: number | string | null;\n}\n\nexport class Payment extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {\n    \"transaction\": Transaction,\n    \"checkout\": Checkout\n  };\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"checkout_id\"], \"path\": \"checkouts/<checkout_id>/payments/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"checkout_id\"], \"path\": \"checkouts/<checkout_id>/payments.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"checkout_id\", \"id\"], \"path\": \"checkouts/<checkout_id>/payments/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"checkout_id\"], \"path\": \"checkouts/<checkout_id>/payments.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"payment\",\n      \"plural\": \"payments\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      checkout_id = null\n    }: FindArgs\n  ): Promise<Payment | null> {\n    const result = await this.baseFind<Payment>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id, \"checkout_id\": checkout_id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      checkout_id = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Payment>> {\n    const response = await this.baseFind<Payment>({\n      session: session,\n      urlIds: {\"checkout_id\": checkout_id},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      checkout_id = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Payment>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {\"checkout_id\": checkout_id},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public checkout: Checkout | null | {[key: string]: any};\n  public credit_card: {[key: string]: unknown} | null;\n  public id: number | null;\n  public next_action: {[key: string]: unknown} | null;\n  public payment_processing_error_message: string | null;\n  public transaction: Transaction | null | {[key: string]: any};\n  public unique_token: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n}\n\nexport class PaymentGateway extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"payment_gateways/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"payment_gateways.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"payment_gateways/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"payment_gateways.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"payment_gateways/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"payment_gateway\",\n      \"plural\": \"payment_gateways\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id\n    }: FindArgs\n  ): Promise<PaymentGateway | null> {\n    const result = await this.baseFind<PaymentGateway>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<PaymentGateway>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<PaymentGateway>> {\n    const response = await this.baseFind<PaymentGateway>({\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public attachment: string | null;\n  public created_at: string | null;\n  public credential1: string | null;\n  public credential2: string | null;\n  public credential3: string | null;\n  public credential4: string | null;\n  public disabled: boolean | null;\n  public enabled_card_brands: string[] | null;\n  public id: number | null;\n  public name: string | null;\n  public processing_method: string | null;\n  public provider_id: number | null;\n  public sandbox: boolean | null;\n  public service_name: string | null;\n  public supports_network_tokenization: boolean | null;\n  public type: string | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Currency} from './currency';\n\ninterface TransactionsArgs {\n  [key: string]: unknown;\n  session: Session;\n  since_id?: unknown;\n  last_id?: unknown;\n  test?: unknown;\n  payout_id?: unknown;\n  payout_status?: unknown;\n}\n\ninterface TransactionsResponse {\n  transactions: PaymentTransaction[];\n}\n\nexport class PaymentTransaction extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {\n    \"currency\": Currency\n  };\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"transactions\", \"ids\": [], \"path\": \"shopify_payments/balance/transactions.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"payment_transaction\",\n      \"plural\": \"payment_transactions\"\n    }\n  ];\n\n  public static async transactions(\n    {\n      session,\n      since_id = null,\n      last_id = null,\n      test = null,\n      payout_id = null,\n      payout_status = null,\n      ...otherArgs\n    }: TransactionsArgs\n  ): Promise<TransactionsResponse | null> {\n    const response = await this.request<TransactionsResponse>({\n      http_method: \"get\",\n      operation: \"transactions\",\n      session: session,\n      urlIds: {},\n      params: {\"since_id\": since_id, \"last_id\": last_id, \"test\": test, \"payout_id\": payout_id, \"payout_status\": payout_status, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public adjustment_order_transactions: {[key: string]: unknown}[] | null;\n  public amount: string | null;\n  public currency: Currency | null | {[key: string]: any};\n  public fee: string | null;\n  public id: number | null;\n  public net: string | null;\n  public payout_id: number | null;\n  public payout_status: string | null;\n  public processed_at: string | null;\n  public source_id: number | null;\n  public source_order_id: number | null;\n  public source_order_transaction_id: string | null;\n  public source_type: string | null;\n  public test: boolean | null;\n  public type: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  since_id?: unknown;\n  last_id?: unknown;\n  date_min?: unknown;\n  date_max?: unknown;\n  date?: unknown;\n  status?: unknown;\n}\n\nexport class Payout extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"shopify_payments/payouts.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"shopify_payments/payouts/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"payout\",\n      \"plural\": \"payouts\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id\n    }: FindArgs\n  ): Promise<Payout | null> {\n    const result = await this.baseFind<Payout>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      since_id = null,\n      last_id = null,\n      date_min = null,\n      date_max = null,\n      date = null,\n      status = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Payout>> {\n    const response = await this.baseFind<Payout>({\n      session: session,\n      urlIds: {},\n      params: {\"since_id\": since_id, \"last_id\": last_id, \"date_min\": date_min, \"date_max\": date_max, \"date\": date, \"status\": status, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public amount: string | null;\n  public currency: string | null;\n  public date: string | null;\n  public id: number | null;\n  public status: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n}\n\nexport class Policy extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"policies.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"policy\",\n      \"plural\": \"policies\"\n    }\n  ];\n\n  public static async all(\n    {\n      session,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Policy>> {\n    const response = await this.baseFind<Policy>({\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public body: string | null;\n  public created_at: string | null;\n  public handle: string | null;\n  public title: string | null;\n  public updated_at: string | null;\n  public url: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n  since_id?: unknown;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  starts_at_min?: unknown;\n  starts_at_max?: unknown;\n  ends_at_min?: unknown;\n  ends_at_max?: unknown;\n  times_used?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n}\n\nexport class PriceRule extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"price_rules/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"price_rules/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"price_rules.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"price_rules/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"price_rules.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"price_rules/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"price_rule\",\n      \"plural\": \"price_rules\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id\n    }: FindArgs\n  ): Promise<PriceRule | null> {\n    const result = await this.baseFind<PriceRule>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<PriceRule>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      limit = null,\n      since_id = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      starts_at_min = null,\n      starts_at_max = null,\n      ends_at_min = null,\n      ends_at_max = null,\n      times_used = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<PriceRule>> {\n    const response = await this.baseFind<PriceRule>({\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, \"since_id\": since_id, \"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"starts_at_min\": starts_at_min, \"starts_at_max\": starts_at_max, \"ends_at_min\": ends_at_min, \"ends_at_max\": ends_at_max, \"times_used\": times_used, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<PriceRule>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public allocation_limit: number | null;\n  public allocation_method: string | null;\n  public created_at: string | null;\n  public customer_segment_prerequisite_ids: number[] | null;\n  public customer_selection: string | null;\n  public ends_at: string | null;\n  public entitled_collection_ids: number[] | null;\n  public entitled_country_ids: number[] | null;\n  public entitled_product_ids: number[] | null;\n  public entitled_variant_ids: number[] | null;\n  public id: number | null;\n  public once_per_customer: boolean | null;\n  public prerequisite_collection_ids: number[] | null;\n  public prerequisite_customer_ids: number[] | null;\n  public prerequisite_product_ids: number[] | null;\n  public prerequisite_quantity_range: {[key: string]: unknown} | null;\n  public prerequisite_shipping_price_range: {[key: string]: unknown} | null;\n  public prerequisite_subtotal_range: {[key: string]: unknown} | null;\n  public prerequisite_to_entitlement_purchase: {[key: string]: unknown} | null;\n  public prerequisite_to_entitlement_quantity_ratio: {[key: string]: unknown} | null;\n  public prerequisite_variant_ids: number[] | null;\n  public starts_at: string | null;\n  public target_selection: string | null;\n  public target_type: string | null;\n  public title: string | null;\n  public updated_at: string | null;\n  public usage_limit: number | null;\n  public value: string | null;\n  public value_type: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n  product_id?: number | string | null;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  product_id?: number | string | null;\n  limit?: unknown;\n  presentment_currencies?: unknown;\n  since_id?: unknown;\n  fields?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  product_id?: number | string | null;\n}\n\nexport class Variant extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"product_id\", \"id\"], \"path\": \"products/<product_id>/variants/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [\"product_id\"], \"path\": \"products/<product_id>/variants/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"product_id\"], \"path\": \"products/<product_id>/variants.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"variants/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"product_id\"], \"path\": \"products/<product_id>/variants.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"variants/<id>.json\"}\n  ];\n  protected static readOnlyAttributes: string[] = [\n    \"inventory_quantity\"\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"variant\",\n      \"plural\": \"variants\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<Variant | null> {\n    const result = await this.baseFind<Variant>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id,\n      product_id = null\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Variant>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id, \"product_id\": product_id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      product_id = null,\n      limit = null,\n      presentment_currencies = null,\n      since_id = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Variant>> {\n    const response = await this.baseFind<Variant>({\n      session: session,\n      urlIds: {\"product_id\": product_id},\n      params: {\"limit\": limit, \"presentment_currencies\": presentment_currencies, \"since_id\": since_id, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      product_id = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Variant>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {\"product_id\": product_id},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public barcode: string | null;\n  public compare_at_price: string | null;\n  public created_at: string | null;\n  public fulfillment_service: string | null;\n  public grams: number | null;\n  public id: number | null;\n  public image_id: number | null;\n  public inventory_item_id: number | null;\n  public inventory_management: string | null;\n  public inventory_policy: string | null;\n  public inventory_quantity: number | null;\n  public old_inventory_quantity: number | null;\n  public option: {[key: string]: unknown} | null;\n  public position: number | null;\n  public presentment_prices: {[key: string]: unknown}[] | null;\n  public price: string | null;\n  public product_id: number | null;\n  public requires_shipping: boolean | null;\n  public sku: string | null;\n  public tax_code: string | null;\n  public taxable: boolean | null;\n  public title: string | null;\n  public updated_at: string | null;\n  public weight: number | null;\n  public weight_unit: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Image} from './image';\nimport {Variant} from './variant';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  ids?: unknown;\n  limit?: unknown;\n  since_id?: unknown;\n  title?: unknown;\n  vendor?: unknown;\n  handle?: unknown;\n  product_type?: unknown;\n  status?: unknown;\n  collection_id?: unknown;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  published_at_min?: unknown;\n  published_at_max?: unknown;\n  published_status?: unknown;\n  fields?: unknown;\n  presentment_currencies?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  vendor?: unknown;\n  product_type?: unknown;\n  collection_id?: unknown;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  published_at_min?: unknown;\n  published_at_max?: unknown;\n  published_status?: unknown;\n}\n\nexport class Product extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {\n    \"images\": Image,\n    \"variants\": Variant\n  };\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"products/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"products/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"products.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"products/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"products.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"products/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"product\",\n      \"plural\": \"products\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<Product | null> {\n    const result = await this.baseFind<Product>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Product>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      ids = null,\n      limit = null,\n      since_id = null,\n      title = null,\n      vendor = null,\n      handle = null,\n      product_type = null,\n      status = null,\n      collection_id = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      published_at_min = null,\n      published_at_max = null,\n      published_status = null,\n      fields = null,\n      presentment_currencies = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Product>> {\n    const response = await this.baseFind<Product>({\n      session: session,\n      urlIds: {},\n      params: {\"ids\": ids, \"limit\": limit, \"since_id\": since_id, \"title\": title, \"vendor\": vendor, \"handle\": handle, \"product_type\": product_type, \"status\": status, \"collection_id\": collection_id, \"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"published_at_min\": published_at_min, \"published_at_max\": published_at_max, \"published_status\": published_status, \"fields\": fields, \"presentment_currencies\": presentment_currencies, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      vendor = null,\n      product_type = null,\n      collection_id = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      published_at_min = null,\n      published_at_max = null,\n      published_status = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Product>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {\"vendor\": vendor, \"product_type\": product_type, \"collection_id\": collection_id, \"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"published_at_min\": published_at_min, \"published_at_max\": published_at_max, \"published_status\": published_status, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public title: string | null;\n  public body_html: string | null;\n  public created_at: string | null;\n  public handle: string | null;\n  public id: number | null;\n  public images: Image[] | null | {[key: string]: any};\n  public options: {[key: string]: unknown} | {[key: string]: unknown}[] | null;\n  public product_type: string | null;\n  public published_at: string | null;\n  public published_scope: string | null;\n  public status: string | null;\n  public tags: string | string[] | null;\n  public template_suffix: string | null;\n  public updated_at: string | null;\n  public variants: Variant[] | null | {[key: string]: any};\n  public vendor: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Image} from './image';\nimport {Variant} from './variant';\n\ninterface FindArgs {\n  session: Session;\n  product_id: number | string;\n}\ninterface DeleteArgs {\n  session: Session;\n  product_id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  product_ids?: unknown;\n  limit?: unknown;\n  collection_id?: unknown;\n  updated_at_min?: unknown;\n  handle?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n}\ninterface ProductIdsArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n}\n\nexport class ProductListing extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {\n    \"images\": Image,\n    \"variants\": Variant\n  };\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"product_id\"], \"path\": \"product_listings/<product_id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"product_listings/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"product_listings.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"product_id\"], \"path\": \"product_listings/<product_id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"product_ids\", \"ids\": [], \"path\": \"product_listings/product_ids.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"product_id\"], \"path\": \"product_listings/<product_id>.json\"}\n  ];\n  protected static primaryKey: string = \"product_id\";\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"product_listing\",\n      \"plural\": \"product_listings\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      product_id\n    }: FindArgs\n  ): Promise<ProductListing | null> {\n    const result = await this.baseFind<ProductListing>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"product_id\": product_id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      product_id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<ProductListing>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"product_id\": product_id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      product_ids = null,\n      limit = null,\n      collection_id = null,\n      updated_at_min = null,\n      handle = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<ProductListing>> {\n    const response = await this.baseFind<ProductListing>({\n      session: session,\n      urlIds: {},\n      params: {\"product_ids\": product_ids, \"limit\": limit, \"collection_id\": collection_id, \"updated_at_min\": updated_at_min, \"handle\": handle, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<ProductListing>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async product_ids(\n    {\n      session,\n      limit = null,\n      ...otherArgs\n    }: ProductIdsArgs\n  ): Promise<unknown> {\n    const response = await this.request<ProductListing>({\n      http_method: \"get\",\n      operation: \"product_ids\",\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public body_html: string | null;\n  public created_at: string | null;\n  public handle: string | null;\n  public images: Image[] | null | {[key: string]: any};\n  public options: {[key: string]: unknown}[] | null;\n  public product_id: number | null;\n  public product_type: string | null;\n  public published_at: string | null;\n  public tags: string | null;\n  public title: string | null;\n  public updated_at: string | null;\n  public variants: Variant[] | null | {[key: string]: any};\n  public vendor: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  product_id?: number | string | null;\n}\n\nexport class ProductResourceFeedback extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"product_id\"], \"path\": \"products/<product_id>/resource_feedback.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"product_id\"], \"path\": \"products/<product_id>/resource_feedback.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"product_resource_feedback\",\n      \"plural\": \"product_resource_feedbacks\"\n    }\n  ];\n\n  protected static getJsonBodyName(): string\n  {\n    return \"resource_feedback\";\n  }\n\n  public static async all(\n    {\n      session,\n      product_id = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<ProductResourceFeedback>> {\n    const response = await this.baseFind<ProductResourceFeedback>({\n      session: session,\n      urlIds: {\"product_id\": product_id},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public created_at: string | null;\n  public feedback_generated_at: string | null;\n  public messages: string[] | null;\n  public product_id: number | null;\n  public resource_id: number | null;\n  public resource_type: string | null;\n  public resource_updated_at: string | null;\n  public state: string | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  since_id?: unknown;\n  fields?: unknown;\n}\ninterface CustomizeArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class RecurringApplicationCharge extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"recurring_application_charges/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"recurring_application_charges.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"recurring_application_charges/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"recurring_application_charges.json\"},\n    {\"http_method\": \"put\", \"operation\": \"customize\", \"ids\": [\"id\"], \"path\": \"recurring_application_charges/<id>/customize.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"recurring_application_charge\",\n      \"plural\": \"recurring_application_charges\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<RecurringApplicationCharge | null> {\n    const result = await this.baseFind<RecurringApplicationCharge>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<RecurringApplicationCharge>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      since_id = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<RecurringApplicationCharge>> {\n    const response = await this.baseFind<RecurringApplicationCharge>({\n      session: session,\n      urlIds: {},\n      params: {\"since_id\": since_id, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public async customize(\n    {\n      body = null,\n      ...otherArgs\n    }: CustomizeArgs\n  ): Promise<unknown> {\n    const response = await this.request<RecurringApplicationCharge>({\n      http_method: \"put\",\n      operation: \"customize\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public activated_on: string | null;\n  public billing_on: string | null;\n  public cancelled_on: string | null;\n  public capped_amount: string | number | null;\n  public confirmation_url: string | null;\n  public created_at: string | null;\n  public currency: string | null;\n  public id: number | null;\n  public name: string | null;\n  public price: string | number | null;\n  public return_url: string | null;\n  public status: string | null;\n  public terms: string | null;\n  public test: boolean | null;\n  public trial_days: number | null;\n  public trial_ends_on: string | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n  since_id?: unknown;\n  path?: unknown;\n  target?: unknown;\n  fields?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  path?: unknown;\n  target?: unknown;\n}\n\nexport class Redirect extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"redirects/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"redirects/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"redirects.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"redirects/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"redirects.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"redirects/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"redirect\",\n      \"plural\": \"redirects\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<Redirect | null> {\n    const result = await this.baseFind<Redirect>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Redirect>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      limit = null,\n      since_id = null,\n      path = null,\n      target = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Redirect>> {\n    const response = await this.baseFind<Redirect>({\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, \"since_id\": since_id, \"path\": path, \"target\": target, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      path = null,\n      target = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Redirect>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {\"path\": path, \"target\": target, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public id: number | null;\n  public path: string | null;\n  public target: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n}\n\nexport class ResourceFeedback extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"resource_feedback.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"resource_feedback.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"resource_feedback\",\n      \"plural\": \"resource_feedbacks\"\n    }\n  ];\n\n  public static async all(\n    {\n      session,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<ResourceFeedback>> {\n    const response = await this.baseFind<ResourceFeedback>({\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public created_at: string | null;\n  public feedback_generated_at: string | null;\n  public messages: string[] | null;\n  public resource_id: number | null;\n  public resource_type: string | null;\n  public state: string | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n  since_id?: unknown;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  src?: unknown;\n  fields?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  src?: unknown;\n}\n\nexport class ScriptTag extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"script_tags/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"script_tags/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"script_tags.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"script_tags/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"script_tags.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"script_tags/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"script_tag\",\n      \"plural\": \"script_tags\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<ScriptTag | null> {\n    const result = await this.baseFind<ScriptTag>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<ScriptTag>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      limit = null,\n      since_id = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      src = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<ScriptTag>> {\n    const response = await this.baseFind<ScriptTag>({\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, \"since_id\": since_id, \"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"src\": src, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      src = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<ScriptTag>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {\"src\": src, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public event: string | null;\n  public src: string | null;\n  public cache: boolean | null;\n  public created_at: string | null;\n  public display_scope: string | null;\n  public id: number | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Country} from './country';\nimport {Province} from './province';\n\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  fields?: unknown;\n}\n\nexport class ShippingZone extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {\n    \"countries\": Country,\n    \"provinces\": Province\n  };\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"shipping_zones.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"shipping_zone\",\n      \"plural\": \"shipping_zones\"\n    }\n  ];\n\n  public static async all(\n    {\n      session,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<ShippingZone>> {\n    const response = await this.baseFind<ShippingZone>({\n      session: session,\n      urlIds: {},\n      params: {\"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public carrier_shipping_rate_providers: unknown | null;\n  public countries: Country[] | null | {[key: string]: any};\n  public id: number | null;\n  public location_group_id: string | null;\n  public name: string | null;\n  public price_based_shipping_rates: {[key: string]: unknown}[] | null;\n  public profile_id: string | null;\n  public provinces: Province[] | null | {[key: string]: any};\n  public weight_based_shipping_rates: {[key: string]: unknown}[] | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  fields?: unknown;\n}\n\nexport class Shop extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"shop.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"shop\",\n      \"plural\": \"shops\"\n    }\n  ];\n\n  public static async current(\n    {\n      session,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<Shop | null> {\n    const result = await this.baseFind<Shop>({\n      session: session,\n      urlIds: {},\n      params: {\"fields\": fields, ...otherArgs},\n    });\n\n    return result.data ? result.data[0] : null;\n  }\n\n\n  public static async all(\n    {\n      session,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Shop>> {\n    const response = await this.baseFind<Shop>({\n      session: session,\n      urlIds: {},\n      params: {\"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public address1: string | null;\n  public address2: string | null;\n  public checkout_api_supported: boolean | null;\n  public city: string | null;\n  public country: string | null;\n  public country_code: string | null;\n  public country_name: string | null;\n  public county_taxes: boolean | null;\n  public created_at: string | null;\n  public currency: string | null;\n  public customer_email: string | null;\n  public domain: string | null;\n  public eligible_for_card_reader_giveaway: boolean | null;\n  public eligible_for_payments: boolean | null;\n  public email: string | null;\n  public enabled_presentment_currencies: string[] | null;\n  public finances: boolean | null;\n  public force_ssl: boolean | null;\n  public google_apps_domain: string | null;\n  public google_apps_login_enabled: string | null;\n  public has_discounts: boolean | null;\n  public has_gift_cards: boolean | null;\n  public has_storefront: boolean | null;\n  public iana_timezone: string | null;\n  public id: number | null;\n  public latitude: number | null;\n  public longitude: number | null;\n  public marketing_sms_consent_enabled_at_checkout: boolean | null;\n  public money_format: string | null;\n  public money_in_emails_format: string | null;\n  public money_with_currency_format: string | null;\n  public money_with_currency_in_emails_format: string | null;\n  public multi_location_enabled: boolean | null;\n  public myshopify_domain: string | null;\n  public name: string | null;\n  public password_enabled: boolean | null;\n  public phone: string | null;\n  public plan_display_name: string | null;\n  public plan_name: string | null;\n  public pre_launch_enabled: boolean | null;\n  public primary_locale: string | null;\n  public primary_location_id: number | null;\n  public province: string | null;\n  public province_code: string | null;\n  public requires_extra_payments_agreement: boolean | null;\n  public setup_required: boolean | null;\n  public shop_owner: string | null;\n  public source: string | null;\n  public tax_shipping: string | null;\n  public taxes_included: boolean | null;\n  public timezone: string | null;\n  public transactional_sms_disabled: boolean | null;\n  public updated_at: string | null;\n  public weight_unit: string | null;\n  public zip: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n  ids?: unknown;\n  since_id?: unknown;\n  title?: unknown;\n  product_id?: unknown;\n  handle?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  published_at_min?: unknown;\n  published_at_max?: unknown;\n  published_status?: unknown;\n  fields?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  title?: unknown;\n  product_id?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  published_at_min?: unknown;\n  published_at_max?: unknown;\n  published_status?: unknown;\n}\ninterface OrderArgs {\n  [key: string]: unknown;\n  products?: unknown;\n  sort_order?: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class SmartCollection extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"smart_collections/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"smart_collections/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"smart_collections.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"smart_collections/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"smart_collections.json\"},\n    {\"http_method\": \"put\", \"operation\": \"order\", \"ids\": [\"id\"], \"path\": \"smart_collections/<id>/order.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"smart_collections/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"smart_collection\",\n      \"plural\": \"smart_collections\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<SmartCollection | null> {\n    const result = await this.baseFind<SmartCollection>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<SmartCollection>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      limit = null,\n      ids = null,\n      since_id = null,\n      title = null,\n      product_id = null,\n      handle = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      published_at_min = null,\n      published_at_max = null,\n      published_status = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<SmartCollection>> {\n    const response = await this.baseFind<SmartCollection>({\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, \"ids\": ids, \"since_id\": since_id, \"title\": title, \"product_id\": product_id, \"handle\": handle, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"published_at_min\": published_at_min, \"published_at_max\": published_at_max, \"published_status\": published_status, \"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      title = null,\n      product_id = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      published_at_min = null,\n      published_at_max = null,\n      published_status = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<SmartCollection>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {\"title\": title, \"product_id\": product_id, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"published_at_min\": published_at_min, \"published_at_max\": published_at_max, \"published_status\": published_status, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async order(\n    {\n      products = null,\n      sort_order = null,\n      body = null,\n      ...otherArgs\n    }: OrderArgs\n  ): Promise<unknown> {\n    const response = await this.request<SmartCollection>({\n      http_method: \"put\",\n      operation: \"order\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {\"products\": products, \"sort_order\": sort_order, ...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public rules: {[key: string]: unknown} | {[key: string]: unknown}[] | null;\n  public title: string | null;\n  public body_html: string | null;\n  public disjunctive: boolean | null;\n  public handle: string | null;\n  public id: number | null;\n  public image: string | {[key: string]: unknown} | null;\n  public published_at: string | null;\n  public published_scope: string | null;\n  public sort_order: string | null;\n  public template_suffix: string | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n}\n\nexport class StorefrontAccessToken extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"storefront_access_tokens/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"storefront_access_tokens.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"storefront_access_tokens.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"storefront_access_token\",\n      \"plural\": \"storefront_access_tokens\"\n    }\n  ];\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<StorefrontAccessToken>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<StorefrontAccessToken>> {\n    const response = await this.baseFind<StorefrontAccessToken>({\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public title: string | null;\n  public access_scope: string | null;\n  public access_token: string | null;\n  public created_at: string | null;\n  public id: number | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n  since_id?: unknown;\n  processed_at_min?: unknown;\n  processed_at_max?: unknown;\n  processed_at?: unknown;\n  order?: unknown;\n}\n\nexport class TenderTransaction extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"tender_transactions.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"tender_transaction\",\n      \"plural\": \"tender_transactions\"\n    }\n  ];\n\n  public static async all(\n    {\n      session,\n      limit = null,\n      since_id = null,\n      processed_at_min = null,\n      processed_at_max = null,\n      processed_at = null,\n      order = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<TenderTransaction>> {\n    const response = await this.baseFind<TenderTransaction>({\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, \"since_id\": since_id, \"processed_at_min\": processed_at_min, \"processed_at_max\": processed_at_max, \"processed_at\": processed_at, \"order\": order, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public amount: string | null;\n  public currency: string | null;\n  public id: number | null;\n  public order_id: number | null;\n  public payment_details: {[key: string]: unknown} | null;\n  public payment_method: string | null;\n  public processed_at: string | null;\n  public remote_reference: string | null;\n  public test: boolean | null;\n  public user_id: number | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  fields?: unknown;\n}\n\nexport class Theme extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"themes/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"themes.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"themes/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"themes.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"themes/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"theme\",\n      \"plural\": \"themes\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<Theme | null> {\n    const result = await this.baseFind<Theme>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Theme>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Theme>> {\n    const response = await this.baseFind<Theme>({\n      session: session,\n      urlIds: {},\n      params: {\"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public created_at: string | null;\n  public id: number | null;\n  public name: string | null;\n  public previewable: boolean | null;\n  public processing: boolean | null;\n  public role: string | null;\n  public src: string | null;\n  public theme_store_id: number | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Currency} from './currency';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  recurring_application_charge_id?: number | string | null;\n  fields?: unknown;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  recurring_application_charge_id?: number | string | null;\n  fields?: unknown;\n}\n\nexport class UsageCharge extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {\n    \"currency\": Currency\n  };\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"recurring_application_charge_id\"], \"path\": \"recurring_application_charges/<recurring_application_charge_id>/usage_charges.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"recurring_application_charge_id\", \"id\"], \"path\": \"recurring_application_charges/<recurring_application_charge_id>/usage_charges/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"recurring_application_charge_id\"], \"path\": \"recurring_application_charges/<recurring_application_charge_id>/usage_charges.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"usage_charge\",\n      \"plural\": \"usage_charges\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      recurring_application_charge_id = null,\n      fields = null\n    }: FindArgs\n  ): Promise<UsageCharge | null> {\n    const result = await this.baseFind<UsageCharge>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id, \"recurring_application_charge_id\": recurring_application_charge_id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      recurring_application_charge_id = null,\n      fields = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<UsageCharge>> {\n    const response = await this.baseFind<UsageCharge>({\n      session: session,\n      urlIds: {\"recurring_application_charge_id\": recurring_application_charge_id},\n      params: {\"fields\": fields, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public created_at: string | null;\n  public currency: Currency | null | {[key: string]: any};\n  public description: string | null;\n  public id: number | null;\n  public price: string | null;\n  public recurring_application_charge_id: number | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n  page_info?: unknown;\n}\ninterface CurrentArgs {\n  [key: string]: unknown;\n  session: Session;\n}\n\nexport class User extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"current\", \"ids\": [], \"path\": \"users/current.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"users.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"users/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"user\",\n      \"plural\": \"users\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id\n    }: FindArgs\n  ): Promise<User | null> {\n    const result = await this.baseFind<User>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      limit = null,\n      page_info = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<User>> {\n    const response = await this.baseFind<User>({\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, \"page_info\": page_info, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async current(\n    {\n      session,\n      ...otherArgs\n    }: CurrentArgs\n  ): Promise<unknown> {\n    const response = await this.request<User>({\n      http_method: \"get\",\n      operation: \"current\",\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public account_owner: boolean | null;\n  public bio: string | null;\n  public email: string | null;\n  public first_name: string | null;\n  public id: number | null;\n  public im: string | null;\n  public last_name: string | null;\n  public locale: string | null;\n  public permissions: string[] | null;\n  public phone: string | null;\n  public receive_announcements: number | null;\n  public screen_name: string | null;\n  public url: string | null;\n  public user_type: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  address?: unknown;\n  created_at_max?: unknown;\n  created_at_min?: unknown;\n  fields?: unknown;\n  limit?: unknown;\n  since_id?: unknown;\n  topic?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  address?: unknown;\n  topic?: unknown;\n}\n\nexport class Webhook extends Base {\n  public static apiVersion = ApiVersion.October24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"id\"], \"path\": \"webhooks/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"webhooks/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"webhooks.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"webhooks/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"webhooks.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"webhooks/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"webhook\",\n      \"plural\": \"webhooks\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<Webhook | null> {\n    const result = await this.baseFind<Webhook>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<Webhook>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      address = null,\n      created_at_max = null,\n      created_at_min = null,\n      fields = null,\n      limit = null,\n      since_id = null,\n      topic = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Webhook>> {\n    const response = await this.baseFind<Webhook>({\n      session: session,\n      urlIds: {},\n      params: {\"address\": address, \"created_at_max\": created_at_max, \"created_at_min\": created_at_min, \"fields\": fields, \"limit\": limit, \"since_id\": since_id, \"topic\": topic, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      address = null,\n      topic = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Webhook>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {\"address\": address, \"topic\": topic, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public address: string | null;\n  public topic: string | null;\n  public api_version: string | null;\n  public created_at: string | null;\n  public fields: string[] | null;\n  public format: string | null;\n  public id: number | null;\n  public metafield_namespaces: string[] | null;\n  public private_metafield_namespaces: string[] | null;\n  public updated_at: string | null;\n}\n", "/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {ShopifyRestResources} from '../../types';\n\nimport {AbandonedCheckout} from './abandoned_checkout';\nimport {AccessScope} from './access_scope';\nimport {ApplePayCertificate} from './apple_pay_certificate';\nimport {ApplicationCharge} from './application_charge';\nimport {ApplicationCredit} from './application_credit';\nimport {Article} from './article';\nimport {Asset} from './asset';\nimport {AssignedFulfillmentOrder} from './assigned_fulfillment_order';\nimport {Balance} from './balance';\nimport {Blog} from './blog';\nimport {CancellationRequest} from './cancellation_request';\nimport {CarrierService} from './carrier_service';\nimport {Checkout} from './checkout';\nimport {Collect} from './collect';\nimport {Collection} from './collection';\nimport {CollectionListing} from './collection_listing';\nimport {Comment} from './comment';\nimport {Country} from './country';\nimport {Currency} from './currency';\nimport {CustomCollection} from './custom_collection';\nimport {Customer} from './customer';\nimport {CustomerAddress} from './customer_address';\nimport {DeprecatedApiCall} from './deprecated_api_call';\nimport {DiscountCode} from './discount_code';\nimport {Dispute} from './dispute';\nimport {DisputeEvidence} from './dispute_evidence';\nimport {DisputeFileUpload} from './dispute_file_upload';\nimport {DraftOrder} from './draft_order';\nimport {Event} from './event';\nimport {Fulfillment} from './fulfillment';\nimport {FulfillmentEvent} from './fulfillment_event';\nimport {FulfillmentOrder} from './fulfillment_order';\nimport {FulfillmentRequest} from './fulfillment_request';\nimport {FulfillmentService} from './fulfillment_service';\nimport {GiftCard} from './gift_card';\nimport {GiftCardAdjustment} from './gift_card_adjustment';\nimport {Image} from './image';\nimport {InventoryItem} from './inventory_item';\nimport {InventoryLevel} from './inventory_level';\nimport {Location} from './location';\nimport {LocationsForMove} from './locations_for_move';\nimport {MarketingEvent} from './marketing_event';\nimport {Metafield} from './metafield';\nimport {MobilePlatformApplication} from './mobile_platform_application';\nimport {Order} from './order';\nimport {OrderRisk} from './order_risk';\nimport {Page} from './page';\nimport {Payment} from './payment';\nimport {PaymentGateway} from './payment_gateway';\nimport {PaymentTransaction} from './payment_transaction';\nimport {Payout} from './payout';\nimport {Policy} from './policy';\nimport {PriceRule} from './price_rule';\nimport {Product} from './product';\nimport {ProductListing} from './product_listing';\nimport {ProductResourceFeedback} from './product_resource_feedback';\nimport {Province} from './province';\nimport {RecurringApplicationCharge} from './recurring_application_charge';\nimport {Redirect} from './redirect';\nimport {Refund} from './refund';\nimport {ResourceFeedback} from './resource_feedback';\nimport {ScriptTag} from './script_tag';\nimport {ShippingZone} from './shipping_zone';\nimport {Shop} from './shop';\nimport {SmartCollection} from './smart_collection';\nimport {StorefrontAccessToken} from './storefront_access_token';\nimport {TenderTransaction} from './tender_transaction';\nimport {Theme} from './theme';\nimport {Transaction} from './transaction';\nimport {UsageCharge} from './usage_charge';\nimport {User} from './user';\nimport {Variant} from './variant';\nimport {Webhook} from './webhook';\n\nexport interface RestResources extends ShopifyRestResources {\n  AbandonedCheckout: typeof AbandonedCheckout;\n  AccessScope: typeof AccessScope;\n  ApplePayCertificate: typeof ApplePayCertificate;\n  ApplicationCharge: typeof ApplicationCharge;\n  ApplicationCredit: typeof ApplicationCredit;\n  Article: typeof Article;\n  Asset: typeof Asset;\n  AssignedFulfillmentOrder: typeof AssignedFulfillmentOrder;\n  Balance: typeof Balance;\n  Blog: typeof Blog;\n  CancellationRequest: typeof CancellationRequest;\n  CarrierService: typeof CarrierService;\n  Checkout: typeof Checkout;\n  Collect: typeof Collect;\n  Collection: typeof Collection;\n  CollectionListing: typeof CollectionListing;\n  Comment: typeof Comment;\n  Country: typeof Country;\n  Currency: typeof Currency;\n  CustomCollection: typeof CustomCollection;\n  Customer: typeof Customer;\n  CustomerAddress: typeof CustomerAddress;\n  DeprecatedApiCall: typeof DeprecatedApiCall;\n  DiscountCode: typeof DiscountCode;\n  Dispute: typeof Dispute;\n  DisputeEvidence: typeof DisputeEvidence;\n  DisputeFileUpload: typeof DisputeFileUpload;\n  DraftOrder: typeof DraftOrder;\n  Event: typeof Event;\n  Fulfillment: typeof Fulfillment;\n  FulfillmentEvent: typeof FulfillmentEvent;\n  FulfillmentOrder: typeof FulfillmentOrder;\n  FulfillmentRequest: typeof FulfillmentRequest;\n  FulfillmentService: typeof FulfillmentService;\n  GiftCard: typeof GiftCard;\n  GiftCardAdjustment: typeof GiftCardAdjustment;\n  Image: typeof Image;\n  InventoryItem: typeof InventoryItem;\n  InventoryLevel: typeof InventoryLevel;\n  Location: typeof Location;\n  LocationsForMove: typeof LocationsForMove;\n  MarketingEvent: typeof MarketingEvent;\n  Metafield: typeof Metafield;\n  MobilePlatformApplication: typeof MobilePlatformApplication;\n  Order: typeof Order;\n  OrderRisk: typeof OrderRisk;\n  Page: typeof Page;\n  Payment: typeof Payment;\n  PaymentGateway: typeof PaymentGateway;\n  PaymentTransaction: typeof PaymentTransaction;\n  Payout: typeof Payout;\n  Policy: typeof Policy;\n  PriceRule: typeof PriceRule;\n  Product: typeof Product;\n  ProductListing: typeof ProductListing;\n  ProductResourceFeedback: typeof ProductResourceFeedback;\n  Province: typeof Province;\n  RecurringApplicationCharge: typeof RecurringApplicationCharge;\n  Redirect: typeof Redirect;\n  Refund: typeof Refund;\n  ResourceFeedback: typeof ResourceFeedback;\n  ScriptTag: typeof ScriptTag;\n  ShippingZone: typeof ShippingZone;\n  Shop: typeof Shop;\n  SmartCollection: typeof SmartCollection;\n  StorefrontAccessToken: typeof StorefrontAccessToken;\n  TenderTransaction: typeof TenderTransaction;\n  Theme: typeof Theme;\n  Transaction: typeof Transaction;\n  UsageCharge: typeof UsageCharge;\n  User: typeof User;\n  Variant: typeof Variant;\n  Webhook: typeof Webhook;\n}\n\nexport const restResources: RestResources = {\n  AbandonedCheckout,\n  AccessScope,\n  ApplePayCertificate,\n  ApplicationCharge,\n  ApplicationCredit,\n  Article,\n  Asset,\n  AssignedFulfillmentOrder,\n  Balance,\n  Blog,\n  CancellationRequest,\n  CarrierService,\n  Checkout,\n  Collect,\n  Collection,\n  CollectionListing,\n  Comment,\n  Country,\n  Currency,\n  CustomCollection,\n  Customer,\n  CustomerAddress,\n  DeprecatedApiCall,\n  DiscountCode,\n  Dispute,\n  DisputeEvidence,\n  DisputeFileUpload,\n  DraftOrder,\n  Event,\n  Fulfillment,\n  FulfillmentEvent,\n  FulfillmentOrder,\n  FulfillmentRequest,\n  FulfillmentService,\n  GiftCard,\n  GiftCardAdjustment,\n  Image,\n  InventoryItem,\n  InventoryLevel,\n  Location,\n  LocationsForMove,\n  MarketingEvent,\n  Metafield,\n  MobilePlatformApplication,\n  Order,\n  OrderRisk,\n  Page,\n  Payment,\n  PaymentGateway,\n  PaymentTransaction,\n  Payout,\n  Policy,\n  PriceRule,\n  Product,\n  ProductListing,\n  ProductResourceFeedback,\n  Province,\n  RecurringApplicationCharge,\n  Redirect,\n  Refund,\n  ResourceFeedback,\n  ScriptTag,\n  ShippingZone,\n  Shop,\n  SmartCollection,\n  StorefrontAccessToken,\n  TenderTransaction,\n  Theme,\n  Transaction,\n  UsageCharge,\n  User,\n  Variant,\n  Webhook,\n};\n"],
  "mappings": "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",
  "names": []
}
